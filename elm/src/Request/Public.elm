{-
   Estuary API
   This is the API for the Estuary application.

   OpenAPI spec version: 0.0.0
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Request.Public exposing (publicByCidCidGet, publicInfoGet, publicMetricsDealsOnChainGet, publicMinersDealsMinerGet, publicMinersFailuresMinerGet, publicMinersGet, publicMinersStatsMinerGet, publicNetAddrsGet, publicNetPeersGet, publicStatsGet)

import Data.String exposing (Decode.string, String)
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "https://api.estuary.tech"


{-
   This endpoint returns the content associated with a CID
-}
publicByCidCidGet : String -> Http.Request 
publicByCidCidGet cid =
    { method = "GET"
    , url = basePath ++ "/public/by-cid/" ++ cid
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns information about the node
-}
publicInfoGet : Http.Request 
publicInfoGet =
    { method = "GET"
    , url = basePath ++ "/public/info"
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint is used to get deal metrics
-}
publicMetricsDealsOnChainGet : Http.Request 
publicMetricsDealsOnChainGet =
    { method = "GET"
    , url = basePath ++ "/public/metrics/deals-on-chain"
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns all miners deals
-}
publicMinersDealsMinerGet : String -> Http.Request 
publicMinersDealsMinerGet miner =
    { method = "GET"
    , url = basePath ++ "/public/miners/deals/" ++ miner
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns all miners
-}
publicMinersFailuresMinerGet : String -> Http.Request 
publicMinersFailuresMinerGet miner =
    { method = "GET"
    , url = basePath ++ "/public/miners/failures/" ++ miner
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns all miners
-}
publicMinersGet : Http.Request 
publicMinersGet =
    { method = "GET"
    , url = basePath ++ "/public/miners"
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns miner stats
-}
publicMinersStatsMinerGet : String -> Http.Request 
publicMinersStatsMinerGet miner =
    { method = "GET"
    , url = basePath ++ "/public/miners/stats/" ++ miner
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint is used to get net addrs
-}
publicNetAddrsGet : Http.Request (List String)
publicNetAddrsGet =
    { method = "GET"
    , url = basePath ++ "/public/net/addrs"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list Decode.string)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint is used to get net peers
-}
publicNetPeersGet : Http.Request (List String)
publicNetPeersGet =
    { method = "GET"
    , url = basePath ++ "/public/net/peers"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list Decode.string)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint is used to get public stats.
-}
publicStatsGet : Http.Request 
publicStatsGet =
    { method = "GET"
    , url = basePath ++ "/public/stats"
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


