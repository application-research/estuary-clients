{-
   Estuary API
   This is the API for the Estuary application.

   OpenAPI spec version: 0.0.0
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Request.Deals exposing (dealEstimatePost, dealInfoDealidGet, dealProposalPropcidGet, dealQueryMinerGet, dealStatusByProposalPropcidGet, dealStatusMinerPropcidGet, dealTransferInProgressGet, dealTransferStatusPost, dealsFailuresGet, dealsMakeMinerPost, dealsStatusDealGet, publicDealsFailuresGet, publicMinersStorageQueryMinerGet)

import Data.MainEstimateDealBody exposing (MainEstimateDealBody, mainEstimateDealBodyEncoder)
import Data.String exposing (Encode.string, String)
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "https://api.estuary.tech"


{-
   This endpoint estimates the cost of a deal
-}
dealEstimatePost : MainEstimateDealBody -> Http.Request 
dealEstimatePost model =
    { method = "POST"
    , url = basePath ++ "/deal/estimate"
    , headers = []
    , body = Http.jsonBody <| mainEstimateDealBodyEncoder model
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns the deal info for a deal
-}
dealInfoDealidGet : Int -> Http.Request 
dealInfoDealidGet dealid =
    { method = "GET"
    , url = basePath ++ "/deal/info/" ++ toString dealid
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns the proposal for a deal
-}
dealProposalPropcidGet : String -> Http.Request 
dealProposalPropcidGet propcid =
    { method = "GET"
    , url = basePath ++ "/deal/proposal/" ++ propcid
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns the ask for a given CID
-}
dealQueryMinerGet : String -> Http.Request 
dealQueryMinerGet miner =
    { method = "GET"
    , url = basePath ++ "/deal/query/" ++ miner
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Get Deal Status by PropCid
-}
dealStatusByProposalPropcidGet : String -> Http.Request 
dealStatusByProposalPropcidGet propcid =
    { method = "GET"
    , url = basePath ++ "/deal/status-by-proposal/" ++ propcid
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns the status of a deal
-}
dealStatusMinerPropcidGet : String -> String -> Http.Request 
dealStatusMinerPropcidGet miner propcid =
    { method = "GET"
    , url = basePath ++ "/deal/status/" ++ miner ++ "/" ++ propcid
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns the in-progress transfers
-}
dealTransferInProgressGet : Http.Request 
dealTransferInProgressGet =
    { method = "GET"
    , url = basePath ++ "/deal/transfer/in-progress"
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns the status of a transfer
-}
dealTransferStatusPost : Http.Request 
dealTransferStatusPost =
    { method = "POST"
    , url = basePath ++ "/deal/transfer/status"
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns a list of storage failures for user
-}
dealsFailuresGet : Http.Request 
dealsFailuresGet =
    { method = "GET"
    , url = basePath ++ "/deals/failures"
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint makes a deal for a given content and miner
-}
dealsMakeMinerPost : String -> String -> Http.Request 
dealsMakeMinerPost miner model =
    { method = "POST"
    , url = basePath ++ "/deals/make/" ++ miner
    , headers = []
    , body = Http.jsonBody <| Encode.string model
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns the status of a deal
-}
dealsStatusDealGet : Int -> Http.Request 
dealsStatusDealGet deal =
    { method = "GET"
    , url = basePath ++ "/deals/status/" ++ toString deal
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns a list of storage failures
-}
publicDealsFailuresGet : Http.Request 
publicDealsFailuresGet =
    { method = "GET"
    , url = basePath ++ "/public/deals/failures"
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   This endpoint returns the ask for a given CID
-}
publicMinersStorageQueryMinerGet : String -> Http.Request 
publicMinersStorageQueryMinerGet miner =
    { method = "GET"
    , url = basePath ++ "/public/miners/storage/query/" ++ miner
    , headers = []
    , body = Http.emptyBody
    , expect = 
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


