{-
   Estuary API
   This is the API for the Estuary application.

   OpenAPI spec version: 0.0.0
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Data.MainImportDealBody exposing (MainImportDealBody, mainImportDealBodyDecoder, mainImportDealBodyEncoder)

import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (decode, optional, required)
import Json.Encode as Encode
import Maybe exposing (map, withDefault)




type alias MainImportDealBody =
    { coluuid : Maybe String
    , dealIDs : Maybe (List Int)
    , dir : Maybe String
    , name : Maybe String
    }


mainImportDealBodyDecoder : Decoder MainImportDealBody
mainImportDealBodyDecoder =
    decode MainImportDealBody
        |> optional "coluuid" (Decode.nullable Decode.string) Nothing
        |> optional "dealIDs" (Decode.nullable (Decode.list Decode.int)) Nothing
        |> optional "dir" (Decode.nullable Decode.string) Nothing
        |> optional "name" (Decode.nullable Decode.string) Nothing



mainImportDealBodyEncoder : MainImportDealBody -> Encode.Value
mainImportDealBodyEncoder model =
    Encode.object
        [ ( "coluuid", withDefault Encode.null (map Encode.string model.coluuid) )
        , ( "dealIDs", withDefault Encode.null (map (Encode.list << List.map Encode.int) model.dealIDs) )
        , ( "dir", withDefault Encode.null (map Encode.string model.dir) )
        , ( "name", withDefault Encode.null (map Encode.string model.name) )
        ]


