{-
   Estuary API
   This is the API for the Estuary application.

   OpenAPI spec version: 0.0.0
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Data.UtilHttpError exposing (UtilHttpError, utilHttpErrorDecoder, utilHttpErrorEncoder)

import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (decode, optional, required)
import Json.Encode as Encode
import Maybe exposing (map, withDefault)




type alias UtilHttpError =
    { code : Maybe Int
    , details : Maybe String
    , reason : Maybe String
    }


utilHttpErrorDecoder : Decoder UtilHttpError
utilHttpErrorDecoder =
    decode UtilHttpError
        |> optional "code" (Decode.nullable Decode.int) Nothing
        |> optional "details" (Decode.nullable Decode.string) Nothing
        |> optional "reason" (Decode.nullable Decode.string) Nothing



utilHttpErrorEncoder : UtilHttpError -> Encode.Value
utilHttpErrorEncoder model =
    Encode.object
        [ ( "code", withDefault Encode.null (map Encode.int model.code) )
        , ( "details", withDefault Encode.null (map Encode.string model.details) )
        , ( "reason", withDefault Encode.null (map Encode.string model.reason) )
        ]


