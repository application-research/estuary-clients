/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models

import io.swagger.client.models.UtilContentType
import io.swagger.client.models.UtilDbCID

/**
 * 
 * @param active 
 * @param aggregate 
 * @param aggregatedIn TODO: shift most of the 'state' booleans in here into a single state field, should make reasoning about things much simpler
 * @param cid 
 * @param createdAt 
 * @param dagSplit If set, this content is part of a split dag. In such a case, the 'root' content should be advertised on the dht, but not have deals made for it, and the children should have deals made for them (unlike with aggregates)
 * @param dealStatus 
 * @param description 
 * @param failed 
 * @param id 
 * @param location 
 * @param name 
 * @param offloaded 
 * @param origins 
 * @param pinMeta 
 * @param pinning 
 * @param pinningStatus 
 * @param replace 
 * @param replication 
 * @param size 
 * @param splitFrom 
 * @param type 
 * @param updatedAt 
 * @param userId 
 */
data class UtilContent (

    val active: kotlin.Boolean? = null,
    val aggregate: kotlin.Boolean? = null,
    /* TODO: shift most of the 'state' booleans in here into a single state field, should make reasoning about things much simpler */
    val aggregatedIn: kotlin.Int? = null,
    val cid: UtilDbCID? = null,
    val createdAt: kotlin.String? = null,
    /* If set, this content is part of a split dag. In such a case, the 'root' content should be advertised on the dht, but not have deals made for it, and the children should have deals made for them (unlike with aggregates) */
    val dagSplit: kotlin.Boolean? = null,
    val dealStatus: kotlin.String? = null,
    val description: kotlin.String? = null,
    val failed: kotlin.Boolean? = null,
    val id: kotlin.Int? = null,
    val location: kotlin.String? = null,
    val name: kotlin.String? = null,
    val offloaded: kotlin.Boolean? = null,
    val origins: kotlin.String? = null,
    val pinMeta: kotlin.String? = null,
    val pinning: kotlin.Boolean? = null,
    val pinningStatus: kotlin.String? = null,
    val replace: kotlin.Boolean? = null,
    val replication: kotlin.Int? = null,
    val size: kotlin.Int? = null,
    val splitFrom: kotlin.Int? = null,
    val type: UtilContentType? = null,
    val updatedAt: kotlin.String? = null,
    val userId: kotlin.Int? = null
) {
}