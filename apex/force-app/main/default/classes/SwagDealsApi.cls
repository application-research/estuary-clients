/*
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagDealsApi {
    SwagClient client;

    public SwagDealsApi(SwagClient client) {
        this.client = client;
    }

    public SwagDealsApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Estimate the cost of a deal
     * This endpoint estimates the cost of a deal
     * @param body The size of the deal in bytes, the replication factor, and the duration of the deal in blocks (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void dealEstimatePost(Map<String, Object> params) {
        client.assertNotNull(params.get('body'), 'body');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/deal/estimate',
            (SwagMainEstimateDealBody) params.get('body'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get Deal Info
     * This endpoint returns the deal info for a deal
     * @param dealid Deal ID (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void dealInfoDealidGet(Map<String, Object> params) {
        client.assertNotNull(params.get('dealid'), 'dealid');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/deal/info/{dealid}', '',
            query, form,
            new Map<String, Object>{
                'dealid' => (Integer) params.get('dealid')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get Proposal
     * This endpoint returns the proposal for a deal
     * @param propcid Proposal CID (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void dealProposalPropcidGet(Map<String, Object> params) {
        client.assertNotNull(params.get('propcid'), 'propcid');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/deal/proposal/{propcid}', '',
            query, form,
            new Map<String, Object>{
                'propcid' => (String) params.get('propcid')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Query Ask
     * This endpoint returns the ask for a given CID
     * @param miner CID (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void dealQueryMinerGet(Map<String, Object> params) {
        client.assertNotNull(params.get('miner'), 'miner');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/deal/query/{miner}', '',
            query, form,
            new Map<String, Object>{
                'miner' => (String) params.get('miner')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get Deal Status by PropCid
     * Get Deal Status by PropCid
     * @param propcid PropCid (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void dealStatusByProposalPropcidGet(Map<String, Object> params) {
        client.assertNotNull(params.get('propcid'), 'propcid');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/deal/status-by-proposal/{propcid}', '',
            query, form,
            new Map<String, Object>{
                'propcid' => (String) params.get('propcid')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Deal Status
     * This endpoint returns the status of a deal
     * @param miner Miner (required)
     * @param propcid Proposal CID (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void dealStatusMinerPropcidGet(Map<String, Object> params) {
        client.assertNotNull(params.get('miner'), 'miner');
        client.assertNotNull(params.get('propcid'), 'propcid');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/deal/status/{miner}/{propcid}', '',
            query, form,
            new Map<String, Object>{
                'miner' => (String) params.get('miner'),
                'propcid' => (String) params.get('propcid')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Transfer In Progress
     * This endpoint returns the in-progress transfers
     * @throws Swagger.ApiException if fails to make API call
     */
    public void dealTransferInProgressGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/deal/transfer/in-progress', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Transfer Status
     * This endpoint returns the status of a transfer
     * @throws Swagger.ApiException if fails to make API call
     */
    public void dealTransferStatusPost() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/deal/transfer/status', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get storage failures for user
     * This endpoint returns a list of storage failures for user
     * @throws Swagger.ApiException if fails to make API call
     */
    public void dealsFailuresGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/deals/failures', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Make Deal
     * This endpoint makes a deal for a given content and miner
     * @param miner Miner (required)
     * @param dealRequest Deal Request (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void dealsMakeMinerPost(Map<String, Object> params) {
        client.assertNotNull(params.get('miner'), 'miner');
        client.assertNotNull(params.get('dealRequest'), 'dealRequest');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/deals/make/{miner}',
            (String) params.get('dealRequest'),
            query, form,
            new Map<String, Object>{
                'miner' => (String) params.get('miner')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get Deal Status
     * This endpoint returns the status of a deal
     * @param deal Deal ID (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void dealsStatusDealGet(Map<String, Object> params) {
        client.assertNotNull(params.get('deal'), 'deal');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/deals/status/{deal}', '',
            query, form,
            new Map<String, Object>{
                'deal' => (Integer) params.get('deal')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get storage failures
     * This endpoint returns a list of storage failures
     * @throws Swagger.ApiException if fails to make API call
     */
    public void publicDealsFailuresGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/public/deals/failures', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Query Ask
     * This endpoint returns the ask for a given CID
     * @param miner CID (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void publicMinersStorageQueryMinerGet(Map<String, Object> params) {
        client.assertNotNull(params.get('miner'), 'miner');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/public/miners/storage/query/{miner}', '',
            query, form,
            new Map<String, Object>{
                'miner' => (String) params.get('miner')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
}
