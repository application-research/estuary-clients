/*
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagPinningApi {
    SwagClient client;

    public SwagPinningApi(SwagClient client) {
        this.client = client;
    }

    public SwagPinningApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * List all pin status objects
     * This endpoint lists all pin status objects
     * @throws Swagger.ApiException if fails to make API call
     */
    public void pinningPinsGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/pinning/pins', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Delete a pinned object
     * This endpoint deletes a pinned object.
     * @param pinid Pin ID (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void pinningPinsPinidDelete(Map<String, Object> params) {
        client.assertNotNull(params.get('pinid'), 'pinid');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'DELETE', '/pinning/pins/{pinid}', '',
            query, form,
            new Map<String, Object>{
                'pinid' => (String) params.get('pinid')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get a pin status object
     * This endpoint returns a pin status object.
     * @param pinid cid (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void pinningPinsPinidGet(Map<String, Object> params) {
        client.assertNotNull(params.get('pinid'), 'pinid');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/pinning/pins/{pinid}', '',
            query, form,
            new Map<String, Object>{
                'pinid' => (String) params.get('pinid')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Replace a pinned object
     * This endpoint replaces a pinned object.
     * @param pinid Pin ID (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void pinningPinsPinidPost(Map<String, Object> params) {
        client.assertNotNull(params.get('pinid'), 'pinid');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/pinning/pins/{pinid}', '',
            query, form,
            new Map<String, Object>{
                'pinid' => (String) params.get('pinid')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Add and pin object
     * This endpoint adds a pin to the IPFS daemon.
     * @param cid cid (required)
     * @param name name (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void pinningPinsPost(Map<String, Object> params) {
        client.assertNotNull(params.get('cid'), 'cid');
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/pinning/pins', '',
            query, form,
            new Map<String, Object>{
                'cid' => (String) params.get('cid'),
                'name' => (String) params.get('name')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
}
