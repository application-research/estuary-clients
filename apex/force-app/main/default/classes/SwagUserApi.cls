/*
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagUserApi {
    SwagClient client;

    public SwagUserApi(SwagClient client) {
        this.client = client;
    }

    public SwagUserApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Get API keys for a user
     * This endpoint is used to get API keys for a user. In estuary, each user can be given multiple API keys (tokens). This endpoint can be used to retrieve all available API keys for a given user.
     * @return List<List<SwagMainGetApiKeysResp>>
     * @throws Swagger.ApiException if fails to make API call
     */
    public List<List<SwagMainGetApiKeysResp>> userApiKeysGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (List<List<SwagMainGetApiKeysResp>>) client.invoke(
            'GET', '/user/api-keys', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            List<List<SwagMainGetApiKeysResp>>.class
        );
    }
    /**
     * Revoke a User API Key.
     * This endpoint is used to revoke a user API key. In estuary, every user is assigned with an API key, this API key is generated and issued for each user and is primarily use to access all estuary features. This endpoint can be used to revoke the API key thats assigned to the user.
     * @param key Key (required)
     * @return String
     * @throws Swagger.ApiException if fails to make API call
     */
    public String userApiKeysKeyDelete(Map<String, Object> params) {
        client.assertNotNull(params.get('key'), 'key');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (String) client.invoke(
            'DELETE', '/user/api-keys/{key}', '',
            query, form,
            new Map<String, Object>{
                'key' => (String) params.get('key')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            String.class
        );
    }
    /**
     * Create API keys for a user
     * This endpoint is used to create API keys for a user. In estuary, each user is given an API key to access all features.
     * @param expiry Expiration - Expiration - Valid time units are ns, us (or Âµs),  ms,  s,  m,  h.  for  example  300h (optional)
     * @param perms Permissions -- currently unused (optional)
     * @return SwagMainGetApiKeysResp
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagMainGetApiKeysResp userApiKeysPost(Map<String, Object> params) {
        List<Swagger.Param> query = new List<Swagger.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('expiry', (String) params.get('expiry')));
        query.addAll(client.makeParam('perms', (String) params.get('perms')));

        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagMainGetApiKeysResp) client.invoke(
            'POST', '/user/api-keys', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            SwagMainGetApiKeysResp.class
        );
    }
    /**
     * Export user data
     * This endpoint is used to get API keys for a user.
     * @return String
     * @throws Swagger.ApiException if fails to make API call
     */
    public String userExportGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (String) client.invoke(
            'GET', '/user/export', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            String.class
        );
    }
    /**
     * Create API keys for a user
     * This endpoint is used to create API keys for a user.
     * @return String
     * @throws Swagger.ApiException if fails to make API call
     */
    public String userStatsGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (String) client.invoke(
            'GET', '/user/stats', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            String.class
        );
    }
}
