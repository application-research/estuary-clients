/*
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagPublicApi {
    SwagClient client;

    public SwagPublicApi(SwagClient client) {
        this.client = client;
    }

    public SwagPublicApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Get Content by Cid
     * This endpoint returns the content associated with a CID
     * @param cid Cid (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void publicByCidCidGet(Map<String, Object> params) {
        client.assertNotNull(params.get('cid'), 'cid');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/public/by-cid/{cid}', '',
            query, form,
            new Map<String, Object>{
                'cid' => (String) params.get('cid')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get public node info
     * This endpoint returns information about the node
     * @throws Swagger.ApiException if fails to make API call
     */
    public void publicInfoGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/public/info', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get deal metrics
     * This endpoint is used to get deal metrics
     * @throws Swagger.ApiException if fails to make API call
     */
    public void publicMetricsDealsOnChainGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/public/metrics/deals-on-chain', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get all miners deals
     * This endpoint returns all miners deals
     * @param miner Filter by miner (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void publicMinersDealsMinerGet(Map<String, Object> params) {
        client.assertNotNull(params.get('miner'), 'miner');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/public/miners/deals/{miner}', '',
            query, form,
            new Map<String, Object>{
                'miner' => (String) params.get('miner')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get all miners
     * This endpoint returns all miners
     * @param miner Filter by miner (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void publicMinersFailuresMinerGet(Map<String, Object> params) {
        client.assertNotNull(params.get('miner'), 'miner');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/public/miners/failures/{miner}', '',
            query, form,
            new Map<String, Object>{
                'miner' => (String) params.get('miner')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get all miners
     * This endpoint returns all miners
     * @throws Swagger.ApiException if fails to make API call
     */
    public void publicMinersGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/public/miners', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get miner stats
     * This endpoint returns miner stats
     * @param miner Filter by miner (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void publicMinersStatsMinerGet(Map<String, Object> params) {
        client.assertNotNull(params.get('miner'), 'miner');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/public/miners/stats/{miner}', '',
            query, form,
            new Map<String, Object>{
                'miner' => (String) params.get('miner')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Net Addrs
     * This endpoint is used to get net addrs
     * @return List<String>
     * @throws Swagger.ApiException if fails to make API call
     */
    public List<String> publicNetAddrsGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (List<String>) client.invoke(
            'GET', '/public/net/addrs', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            List<String>.class
        );
    }
    /**
     * Net Peers
     * This endpoint is used to get net peers
     * @return List<String>
     * @throws Swagger.ApiException if fails to make API call
     */
    public List<String> publicNetPeersGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (List<String>) client.invoke(
            'GET', '/public/net/peers', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            List<String>.class
        );
    }
    /**
     * Public stats
     * This endpoint is used to get public stats.
     * @throws Swagger.ApiException if fails to make API call
     */
    public void publicStatsGet() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/public/stats', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            null
        );
    }
}
