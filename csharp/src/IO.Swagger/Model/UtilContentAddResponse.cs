/* 
 * Estuary API
 *
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// UtilContentAddResponse
    /// </summary>
    [DataContract]
    public partial class UtilContentAddResponse :  IEquatable<UtilContentAddResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UtilContentAddResponse" /> class.
        /// </summary>
        /// <param name="cid">cid.</param>
        /// <param name="estuaryId">estuaryId.</param>
        /// <param name="providers">providers.</param>
        /// <param name="retrievalUrl">retrievalUrl.</param>
        public UtilContentAddResponse(string cid = default(string), int? estuaryId = default(int?), List<string> providers = default(List<string>), string retrievalUrl = default(string))
        {
            this.Cid = cid;
            this.EstuaryId = estuaryId;
            this.Providers = providers;
            this.RetrievalUrl = retrievalUrl;
        }
        
        /// <summary>
        /// Gets or Sets Cid
        /// </summary>
        [DataMember(Name="cid", EmitDefaultValue=false)]
        public string Cid { get; set; }

        /// <summary>
        /// Gets or Sets EstuaryId
        /// </summary>
        [DataMember(Name="estuaryId", EmitDefaultValue=false)]
        public int? EstuaryId { get; set; }

        /// <summary>
        /// Gets or Sets Providers
        /// </summary>
        [DataMember(Name="providers", EmitDefaultValue=false)]
        public List<string> Providers { get; set; }

        /// <summary>
        /// Gets or Sets RetrievalUrl
        /// </summary>
        [DataMember(Name="retrieval_url", EmitDefaultValue=false)]
        public string RetrievalUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UtilContentAddResponse {\n");
            sb.Append("  Cid: ").Append(Cid).Append("\n");
            sb.Append("  EstuaryId: ").Append(EstuaryId).Append("\n");
            sb.Append("  Providers: ").Append(Providers).Append("\n");
            sb.Append("  RetrievalUrl: ").Append(RetrievalUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UtilContentAddResponse);
        }

        /// <summary>
        /// Returns true if UtilContentAddResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of UtilContentAddResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UtilContentAddResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Cid == input.Cid ||
                    (this.Cid != null &&
                    this.Cid.Equals(input.Cid))
                ) && 
                (
                    this.EstuaryId == input.EstuaryId ||
                    (this.EstuaryId != null &&
                    this.EstuaryId.Equals(input.EstuaryId))
                ) && 
                (
                    this.Providers == input.Providers ||
                    this.Providers != null &&
                    this.Providers.SequenceEqual(input.Providers)
                ) && 
                (
                    this.RetrievalUrl == input.RetrievalUrl ||
                    (this.RetrievalUrl != null &&
                    this.RetrievalUrl.Equals(input.RetrievalUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Cid != null)
                    hashCode = hashCode * 59 + this.Cid.GetHashCode();
                if (this.EstuaryId != null)
                    hashCode = hashCode * 59 + this.EstuaryId.GetHashCode();
                if (this.Providers != null)
                    hashCode = hashCode * 59 + this.Providers.GetHashCode();
                if (this.RetrievalUrl != null)
                    hashCode = hashCode * 59 + this.RetrievalUrl.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
