/* 
 * Estuary API
 *
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = estuary-client.Client.SwaggerDateConverter;

namespace estuary-client.Model
{
    /// <summary>
    /// AutoretrieveInitBody
    /// </summary>
    [DataContract]
        public partial class AutoretrieveInitBody :  IEquatable<AutoretrieveInitBody>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AutoretrieveInitBody" /> class.
        /// </summary>
        /// <param name="addresses">Autoretrieve&#x27;s comma-separated list of addresses (required).</param>
        /// <param name="pubKey">Autoretrieve&#x27;s public key (required).</param>
        public AutoretrieveInitBody(string addresses = default(string), string pubKey = default(string))
        {
            // to ensure "addresses" is required (not null)
            if (addresses == null)
            {
                throw new InvalidDataException("addresses is a required property for AutoretrieveInitBody and cannot be null");
            }
            else
            {
                this.Addresses = addresses;
            }
            // to ensure "pubKey" is required (not null)
            if (pubKey == null)
            {
                throw new InvalidDataException("pubKey is a required property for AutoretrieveInitBody and cannot be null");
            }
            else
            {
                this.PubKey = pubKey;
            }
        }
        
        /// <summary>
        /// Autoretrieve&#x27;s comma-separated list of addresses
        /// </summary>
        /// <value>Autoretrieve&#x27;s comma-separated list of addresses</value>
        [DataMember(Name="addresses", EmitDefaultValue=false)]
        public string Addresses { get; set; }

        /// <summary>
        /// Autoretrieve&#x27;s public key
        /// </summary>
        /// <value>Autoretrieve&#x27;s public key</value>
        [DataMember(Name="pubKey", EmitDefaultValue=false)]
        public string PubKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AutoretrieveInitBody {\n");
            sb.Append("  Addresses: ").Append(Addresses).Append("\n");
            sb.Append("  PubKey: ").Append(PubKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AutoretrieveInitBody);
        }

        /// <summary>
        /// Returns true if AutoretrieveInitBody instances are equal
        /// </summary>
        /// <param name="input">Instance of AutoretrieveInitBody to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AutoretrieveInitBody input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Addresses == input.Addresses ||
                    (this.Addresses != null &&
                    this.Addresses.Equals(input.Addresses))
                ) && 
                (
                    this.PubKey == input.PubKey ||
                    (this.PubKey != null &&
                    this.PubKey.Equals(input.PubKey))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Addresses != null)
                    hashCode = hashCode * 59 + this.Addresses.GetHashCode();
                if (this.PubKey != null)
                    hashCode = hashCode * 59 + this.PubKey.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
