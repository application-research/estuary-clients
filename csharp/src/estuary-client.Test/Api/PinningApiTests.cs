/* 
 * Estuary API
 *
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using estuary-client.Client;
using estuary-client.Api;
using estuary-client.Model;

namespace estuary-client.Test
{
    /// <summary>
    ///  Class for testing PinningApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PinningApiTests
    {
        private PinningApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PinningApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PinningApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PinningApi
            //Assert.IsInstanceOfType(typeof(PinningApi), instance, "instance is a PinningApi");
        }

        
        /// <summary>
        /// Test PinningPinsGet
        /// </summary>
        [Test]
        public void PinningPinsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PinningPinsGet();
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test PinningPinsPinidDelete
        /// </summary>
        [Test]
        public void PinningPinsPinidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pinid = null;
            //var response = instance.PinningPinsPinidDelete(pinid);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test PinningPinsPinidGet
        /// </summary>
        [Test]
        public void PinningPinsPinidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pinid = null;
            //var response = instance.PinningPinsPinidGet(pinid);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test PinningPinsPinidPost
        /// </summary>
        [Test]
        public void PinningPinsPinidPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pinid = null;
            //string cid = null;
            //string name = null;
            //string origins = null;
            //string meta = null;
            //var response = instance.PinningPinsPinidPost(pinid, cid, name, origins, meta);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test PinningPinsPost
        /// </summary>
        [Test]
        public void PinningPinsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TypesIpfsPin pin = null;
            //var response = instance.PinningPinsPost(pin);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
    }

}
