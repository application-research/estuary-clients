/* 
 * Estuary API
 *
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using estuary-client.Client;
using estuary-client.Api;
using estuary-client.Model;

namespace estuary-client.Test
{
    /// <summary>
    ///  Class for testing SpApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SpApiTests
    {
        private SpApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SpApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SpApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SpApi
            //Assert.IsInstanceOfType(typeof(SpApi), instance, "instance is a SpApi");
        }

        /// <summary>
        /// Test StorageProvidersClaimPost
        /// </summary>
        [Test]
        public void StorageProvidersClaimPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MinerClaimMinerBody body = null;
            //var response = instance.StorageProvidersClaimPost(body);
            //Assert.IsInstanceOf<GithubComApplicationResearchEstuaryApiV2ClaimResponse> (response, "response is GithubComApplicationResearchEstuaryApiV2ClaimResponse");
        }
        /// <summary>
        /// Test StorageProvidersClaimSpGet
        /// </summary>
        [Test]
        public void StorageProvidersClaimSpGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sp = null;
            //var response = instance.StorageProvidersClaimSpGet(sp);
            //Assert.IsInstanceOf<GithubComApplicationResearchEstuaryApiV2ClaimMsgResponse> (response, "response is GithubComApplicationResearchEstuaryApiV2ClaimMsgResponse");
        }
        /// <summary>
        /// Test StorageProvidersDealsSpGet
        /// </summary>
        [Test]
        public void StorageProvidersDealsSpGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sp = null;
            //string ignoreFailed = null;
            //var response = instance.StorageProvidersDealsSpGet(sp, ignoreFailed);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test StorageProvidersFailuresSpGet
        /// </summary>
        [Test]
        public void StorageProvidersFailuresSpGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sp = null;
            //var response = instance.StorageProvidersFailuresSpGet(sp);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test StorageProvidersGet
        /// </summary>
        [Test]
        public void StorageProvidersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.StorageProvidersGet();
            //Assert.IsInstanceOf<List<ApiStorageProviderResp>> (response, "response is List<ApiStorageProviderResp>");
        }
        /// <summary>
        /// Test StorageProvidersSetInfoSpPut
        /// </summary>
        [Test]
        public void StorageProvidersSetInfoSpPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MinerMinerSetInfoParams body = null;
            //string sp = null;
            //instance.StorageProvidersSetInfoSpPut(body, sp);
            
        }
        /// <summary>
        /// Test StorageProvidersStatsSpGet
        /// </summary>
        [Test]
        public void StorageProvidersStatsSpGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sp = null;
            //var response = instance.StorageProvidersStatsSpGet(sp);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test StorageProvidersSuspendSpPost
        /// </summary>
        [Test]
        public void StorageProvidersSuspendSpPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MinerSuspendMinerBody body = null;
            //string sp = null;
            //var response = instance.StorageProvidersSuspendSpPost(body, sp);
            //Assert.IsInstanceOf<Dictionary<string, string>> (response, "response is Dictionary<string, string>");
        }
        /// <summary>
        /// Test StorageProvidersUnsuspendSpPut
        /// </summary>
        [Test]
        public void StorageProvidersUnsuspendSpPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sp = null;
            //instance.StorageProvidersUnsuspendSpPut(sp);
            
        }
    }

}
