/* 
 * Estuary API
 *
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DealsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DealsApiTests
    {
        private DealsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DealsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DealsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DealsApi
            //Assert.IsInstanceOfType(typeof(DealsApi), instance, "instance is a DealsApi");
        }

        
        /// <summary>
        /// Test DealEstimatePost
        /// </summary>
        [Test]
        public void DealEstimatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MainEstimateDealBody body = null;
            //instance.DealEstimatePost(body);
            
        }
        
        /// <summary>
        /// Test DealInfoDealidGet
        /// </summary>
        [Test]
        public void DealInfoDealidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? dealid = null;
            //instance.DealInfoDealidGet(dealid);
            
        }
        
        /// <summary>
        /// Test DealProposalPropcidGet
        /// </summary>
        [Test]
        public void DealProposalPropcidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string propcid = null;
            //instance.DealProposalPropcidGet(propcid);
            
        }
        
        /// <summary>
        /// Test DealQueryMinerGet
        /// </summary>
        [Test]
        public void DealQueryMinerGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string miner = null;
            //instance.DealQueryMinerGet(miner);
            
        }
        
        /// <summary>
        /// Test DealStatusByProposalPropcidGet
        /// </summary>
        [Test]
        public void DealStatusByProposalPropcidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string propcid = null;
            //instance.DealStatusByProposalPropcidGet(propcid);
            
        }
        
        /// <summary>
        /// Test DealStatusMinerPropcidGet
        /// </summary>
        [Test]
        public void DealStatusMinerPropcidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string miner = null;
            //string propcid = null;
            //instance.DealStatusMinerPropcidGet(miner, propcid);
            
        }
        
        /// <summary>
        /// Test DealTransferInProgressGet
        /// </summary>
        [Test]
        public void DealTransferInProgressGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DealTransferInProgressGet();
            
        }
        
        /// <summary>
        /// Test DealTransferStatusPost
        /// </summary>
        [Test]
        public void DealTransferStatusPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DealTransferStatusPost();
            
        }
        
        /// <summary>
        /// Test DealsFailuresGet
        /// </summary>
        [Test]
        public void DealsFailuresGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DealsFailuresGet();
            
        }
        
        /// <summary>
        /// Test DealsMakeMinerPost
        /// </summary>
        [Test]
        public void DealsMakeMinerPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string miner = null;
            //string dealRequest = null;
            //instance.DealsMakeMinerPost(miner, dealRequest);
            
        }
        
        /// <summary>
        /// Test DealsStatusDealGet
        /// </summary>
        [Test]
        public void DealsStatusDealGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? deal = null;
            //instance.DealsStatusDealGet(deal);
            
        }
        
        /// <summary>
        /// Test PublicDealsFailuresGet
        /// </summary>
        [Test]
        public void PublicDealsFailuresGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PublicDealsFailuresGet();
            
        }
        
        /// <summary>
        /// Test PublicMinersStorageQueryMinerGet
        /// </summary>
        [Test]
        public void PublicMinersStorageQueryMinerGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string miner = null;
            //instance.PublicMinersStorageQueryMinerGet(miner);
            
        }
        
    }

}
