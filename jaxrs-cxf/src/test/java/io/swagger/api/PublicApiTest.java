/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.api;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * Estuary API
 *
 * <p>This is the API for the Estuary application.
 *
 * API tests for PublicApi 
 */
public class PublicApiTest {


    private PublicApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("https://api.estuary.tech", PublicApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    
    /**
     * Get Content by Cid
     *
     * This endpoint returns the content associated with a CID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicByCidCidGetTest() {
        String cid = null;
        //api.publicByCidCidGet(cid);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Get public node info
     *
     * This endpoint returns information about the node
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicInfoGetTest() {
        //api.publicInfoGet();
        
        // TODO: test validations
        
        
    }
    
    /**
     * Get deal metrics
     *
     * This endpoint is used to get deal metrics
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicMetricsDealsOnChainGetTest() {
        //api.publicMetricsDealsOnChainGet();
        
        // TODO: test validations
        
        
    }
    
    /**
     * Get all miners deals
     *
     * This endpoint returns all miners deals
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicMinersDealsMinerGetTest() {
        String miner = null;
        //api.publicMinersDealsMinerGet(miner);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Get all miners
     *
     * This endpoint returns all miners
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicMinersFailuresMinerGetTest() {
        String miner = null;
        //api.publicMinersFailuresMinerGet(miner);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Get all miners
     *
     * This endpoint returns all miners
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicMinersGetTest() {
        //api.publicMinersGet();
        
        // TODO: test validations
        
        
    }
    
    /**
     * Get miner stats
     *
     * This endpoint returns miner stats
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicMinersStatsMinerGetTest() {
        String miner = null;
        //api.publicMinersStatsMinerGet(miner);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Net Addrs
     *
     * This endpoint is used to get net addrs
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicNetAddrsGetTest() {
        //List<String> response = api.publicNetAddrsGet();
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Net Peers
     *
     * This endpoint is used to get net peers
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicNetPeersGetTest() {
        //List<String> response = api.publicNetPeersGet();
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Public stats
     *
     * This endpoint is used to get public stats.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publicStatsGetTest() {
        //api.publicStatsGet();
        
        // TODO: test validations
        
        
    }
    
}
