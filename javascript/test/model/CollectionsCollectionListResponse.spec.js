/*
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.40
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EstuaryClient);
  }
}(this, function(expect, EstuaryClient) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CollectionsCollectionListResponse', function() {
      beforeEach(function() {
        instance = new EstuaryClient.CollectionsCollectionListResponse();
      });

      it('should create an instance of CollectionsCollectionListResponse', function() {
        // TODO: update the code to test CollectionsCollectionListResponse
        expect(instance).to.be.a(EstuaryClient.CollectionsCollectionListResponse);
      });

      it('should have the property cid (base name: "cid")', function() {
        // TODO: update the code to test the property cid
        expect(instance).to.have.property('cid');
        // expect(instance.cid).to.be(expectedValueLiteral);
      });

      it('should have the property coluuid (base name: "coluuid")', function() {
        // TODO: update the code to test the property coluuid
        expect(instance).to.have.property('coluuid');
        // expect(instance.coluuid).to.be(expectedValueLiteral);
      });

      it('should have the property contId (base name: "contId")', function() {
        // TODO: update the code to test the property contId
        expect(instance).to.have.property('contId');
        // expect(instance.contId).to.be(expectedValueLiteral);
      });

      it('should have the property dir (base name: "dir")', function() {
        // TODO: update the code to test the property dir
        expect(instance).to.have.property('dir');
        // expect(instance.dir).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property size (base name: "size")', function() {
        // TODO: update the code to test the property size
        expect(instance).to.have.property('size');
        // expect(instance.size).to.be(expectedValueLiteral);
      });

      it('should have the property type (base name: "type")', function() {
        // TODO: update the code to test the property type
        expect(instance).to.have.property('type');
        // expect(instance.type).to.be(expectedValueLiteral);
      });

      it('should have the property updatedAt (base name: "updatedAt")', function() {
        // TODO: update the code to test the property updatedAt
        expect(instance).to.have.property('updatedAt');
        // expect(instance.updatedAt).to.be(expectedValueLiteral);
      });

    });
  });

}));
