/*
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.37
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EstuaryClient);
  }
}(this, function(expect, EstuaryClient) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('TypesIpfsPinStatusResponse', function() {
      beforeEach(function() {
        instance = new EstuaryClient.TypesIpfsPinStatusResponse();
      });

      it('should create an instance of TypesIpfsPinStatusResponse', function() {
        // TODO: update the code to test TypesIpfsPinStatusResponse
        expect(instance).to.be.a(EstuaryClient.TypesIpfsPinStatusResponse);
      });

      it('should have the property created (base name: "created")', function() {
        // TODO: update the code to test the property created
        expect(instance).to.have.property('created');
        // expect(instance.created).to.be(expectedValueLiteral);
      });

      it('should have the property delegates (base name: "delegates")', function() {
        // TODO: update the code to test the property delegates
        expect(instance).to.have.property('delegates');
        // expect(instance.delegates).to.be(expectedValueLiteral);
      });

      it('should have the property info (base name: "info")', function() {
        // TODO: update the code to test the property info
        expect(instance).to.have.property('info');
        // expect(instance.info).to.be(expectedValueLiteral);
      });

      it('should have the property pin (base name: "pin")', function() {
        // TODO: update the code to test the property pin
        expect(instance).to.have.property('pin');
        // expect(instance.pin).to.be(expectedValueLiteral);
      });

      it('should have the property requestid (base name: "requestid")', function() {
        // TODO: update the code to test the property requestid
        expect(instance).to.have.property('requestid');
        // expect(instance.requestid).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

    });
  });

}));
