/*
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.37
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EstuaryClient);
  }
}(this, function(expect, EstuaryClient) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('UtilUserSettings', function() {
      beforeEach(function() {
        instance = new EstuaryClient.UtilUserSettings();
      });

      it('should create an instance of UtilUserSettings', function() {
        // TODO: update the code to test UtilUserSettings
        expect(instance).to.be.a(EstuaryClient.UtilUserSettings);
      });

      it('should have the property contentAddingDisabled (base name: "contentAddingDisabled")', function() {
        // TODO: update the code to test the property contentAddingDisabled
        expect(instance).to.have.property('contentAddingDisabled');
        // expect(instance.contentAddingDisabled).to.be(expectedValueLiteral);
      });

      it('should have the property dealDuration (base name: "dealDuration")', function() {
        // TODO: update the code to test the property dealDuration
        expect(instance).to.have.property('dealDuration');
        // expect(instance.dealDuration).to.be(expectedValueLiteral);
      });

      it('should have the property dealMakingDisabled (base name: "dealMakingDisabled")', function() {
        // TODO: update the code to test the property dealMakingDisabled
        expect(instance).to.have.property('dealMakingDisabled');
        // expect(instance.dealMakingDisabled).to.be(expectedValueLiteral);
      });

      it('should have the property fileStagingThreshold (base name: "fileStagingThreshold")', function() {
        // TODO: update the code to test the property fileStagingThreshold
        expect(instance).to.have.property('fileStagingThreshold');
        // expect(instance.fileStagingThreshold).to.be(expectedValueLiteral);
      });

      it('should have the property flags (base name: "flags")', function() {
        // TODO: update the code to test the property flags
        expect(instance).to.have.property('flags');
        // expect(instance.flags).to.be(expectedValueLiteral);
      });

      it('should have the property replication (base name: "replication")', function() {
        // TODO: update the code to test the property replication
        expect(instance).to.have.property('replication');
        // expect(instance.replication).to.be(expectedValueLiteral);
      });

      it('should have the property uploadEndpoints (base name: "uploadEndpoints")', function() {
        // TODO: update the code to test the property uploadEndpoints
        expect(instance).to.have.property('uploadEndpoints');
        // expect(instance.uploadEndpoints).to.be(expectedValueLiteral);
      });

      it('should have the property verified (base name: "verified")', function() {
        // TODO: update the code to test the property verified
        expect(instance).to.have.property('verified');
        // expect(instance.verified).to.be(expectedValueLiteral);
      });

    });
  });

}));
