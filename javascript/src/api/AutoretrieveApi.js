/*
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.36
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {UtilHttpError} from '../model/UtilHttpError';

/**
* Autoretrieve service.
* @module api/AutoretrieveApi
* @version 1.0.3
*/
export class AutoretrieveApi {

    /**
    * Constructs a new AutoretrieveApi. 
    * @alias module:api/AutoretrieveApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the adminAutoretrieveInitPost operation.
     * @callback moduleapi/AutoretrieveApi~adminAutoretrieveInitPostCallback
     * @param {String} error Error message, if any.
     * @param {'String'{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Register autoretrieve server
     * This endpoint registers a new autoretrieve server
     * @param {String} addresses 
     * @param {String} pubKey 
     * @param {module:api/AutoretrieveApi~adminAutoretrieveInitPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    adminAutoretrieveInitPost(addresses, pubKey, callback) {
      
      let postBody = null;
      // verify the required parameter 'addresses' is set
      if (addresses === undefined || addresses === null) {
        throw new Error("Missing the required parameter 'addresses' when calling adminAutoretrieveInitPost");
      }
      // verify the required parameter 'pubKey' is set
      if (pubKey === undefined || pubKey === null) {
        throw new Error("Missing the required parameter 'pubKey' when calling adminAutoretrieveInitPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        'addresses': addresses,'pubKey': pubKey
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = 'String';

      return this.apiClient.callApi(
        '/admin/autoretrieve/init', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the adminAutoretrieveListGet operation.
     * @callback moduleapi/AutoretrieveApi~adminAutoretrieveListGetCallback
     * @param {String} error Error message, if any.
     * @param {'String'{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List autoretrieve servers
     * This endpoint lists all registered autoretrieve servers
     * @param {module:api/AutoretrieveApi~adminAutoretrieveListGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    adminAutoretrieveListGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'String';

      return this.apiClient.callApi(
        '/admin/autoretrieve/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the autoretrieveHeartbeatPost operation.
     * @callback moduleapi/AutoretrieveApi~autoretrieveHeartbeatPostCallback
     * @param {String} error Error message, if any.
     * @param {'String'{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Marks autoretrieve server as up
     * This endpoint updates the lastConnection field for autoretrieve
     * @param {String} token Autoretrieve&#x27;s auth token
     * @param {module:api/AutoretrieveApi~autoretrieveHeartbeatPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    autoretrieveHeartbeatPost(token, callback) {
      
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling autoretrieveHeartbeatPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'token': token
      };
      let formParams = {
        
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'String';

      return this.apiClient.callApi(
        '/autoretrieve/heartbeat', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}