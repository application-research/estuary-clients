# coding: utf-8

"""
    Estuary API

    This is the API for the Estuary application.  # noqa: E501

    OpenAPI spec version: 0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class UtilContentAddResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cid': 'str',
        'estuary_id': 'int',
        'estuary_retrieval_url': 'str',
        'providers': 'list[str]',
        'retrieval_url': 'str'
    }

    attribute_map = {
        'cid': 'cid',
        'estuary_id': 'estuaryId',
        'estuary_retrieval_url': 'estuary_retrieval_url',
        'providers': 'providers',
        'retrieval_url': 'retrieval_url'
    }

    def __init__(self, cid=None, estuary_id=None, estuary_retrieval_url=None, providers=None, retrieval_url=None):  # noqa: E501
        """UtilContentAddResponse - a model defined in Swagger"""  # noqa: E501
        self._cid = None
        self._estuary_id = None
        self._estuary_retrieval_url = None
        self._providers = None
        self._retrieval_url = None
        self.discriminator = None
        if cid is not None:
            self.cid = cid
        if estuary_id is not None:
            self.estuary_id = estuary_id
        if estuary_retrieval_url is not None:
            self.estuary_retrieval_url = estuary_retrieval_url
        if providers is not None:
            self.providers = providers
        if retrieval_url is not None:
            self.retrieval_url = retrieval_url

    @property
    def cid(self):
        """Gets the cid of this UtilContentAddResponse.  # noqa: E501


        :return: The cid of this UtilContentAddResponse.  # noqa: E501
        :rtype: str
        """
        return self._cid

    @cid.setter
    def cid(self, cid):
        """Sets the cid of this UtilContentAddResponse.


        :param cid: The cid of this UtilContentAddResponse.  # noqa: E501
        :type: str
        """

        self._cid = cid

    @property
    def estuary_id(self):
        """Gets the estuary_id of this UtilContentAddResponse.  # noqa: E501


        :return: The estuary_id of this UtilContentAddResponse.  # noqa: E501
        :rtype: int
        """
        return self._estuary_id

    @estuary_id.setter
    def estuary_id(self, estuary_id):
        """Sets the estuary_id of this UtilContentAddResponse.


        :param estuary_id: The estuary_id of this UtilContentAddResponse.  # noqa: E501
        :type: int
        """

        self._estuary_id = estuary_id

    @property
    def estuary_retrieval_url(self):
        """Gets the estuary_retrieval_url of this UtilContentAddResponse.  # noqa: E501


        :return: The estuary_retrieval_url of this UtilContentAddResponse.  # noqa: E501
        :rtype: str
        """
        return self._estuary_retrieval_url

    @estuary_retrieval_url.setter
    def estuary_retrieval_url(self, estuary_retrieval_url):
        """Sets the estuary_retrieval_url of this UtilContentAddResponse.


        :param estuary_retrieval_url: The estuary_retrieval_url of this UtilContentAddResponse.  # noqa: E501
        :type: str
        """

        self._estuary_retrieval_url = estuary_retrieval_url

    @property
    def providers(self):
        """Gets the providers of this UtilContentAddResponse.  # noqa: E501


        :return: The providers of this UtilContentAddResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._providers

    @providers.setter
    def providers(self, providers):
        """Sets the providers of this UtilContentAddResponse.


        :param providers: The providers of this UtilContentAddResponse.  # noqa: E501
        :type: list[str]
        """

        self._providers = providers

    @property
    def retrieval_url(self):
        """Gets the retrieval_url of this UtilContentAddResponse.  # noqa: E501


        :return: The retrieval_url of this UtilContentAddResponse.  # noqa: E501
        :rtype: str
        """
        return self._retrieval_url

    @retrieval_url.setter
    def retrieval_url(self, retrieval_url):
        """Sets the retrieval_url of this UtilContentAddResponse.


        :param retrieval_url: The retrieval_url of this UtilContentAddResponse.  # noqa: E501
        :type: str
        """

        self._retrieval_url = retrieval_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(UtilContentAddResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UtilContentAddResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
