=begin
#Estuary API

#This is the API for the Estuary application.

OpenAPI spec version: 0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.28

=end

require 'uri'

module SwaggerClient
  class DealsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Estimate the cost of a deal
    # This endpoint estimates the cost of a deal
    # @param body The size of the deal in bytes, the replication factor, and the duration of the deal in blocks
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def deal_estimate_post(body, opts = {})
      deal_estimate_post_with_http_info(body, opts)
      nil
    end

    # Estimate the cost of a deal
    # This endpoint estimates the cost of a deal
    # @param body The size of the deal in bytes, the replication factor, and the duration of the deal in blocks
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def deal_estimate_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.deal_estimate_post ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling DealsApi.deal_estimate_post"
      end
      # resource path
      local_var_path = '/deal/estimate'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#deal_estimate_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Deal Info
    # This endpoint returns the deal info for a deal
    # @param dealid Deal ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def deal_info_dealid_get(dealid, opts = {})
      deal_info_dealid_get_with_http_info(dealid, opts)
      nil
    end

    # Get Deal Info
    # This endpoint returns the deal info for a deal
    # @param dealid Deal ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def deal_info_dealid_get_with_http_info(dealid, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.deal_info_dealid_get ...'
      end
      # verify the required parameter 'dealid' is set
      if @api_client.config.client_side_validation && dealid.nil?
        fail ArgumentError, "Missing the required parameter 'dealid' when calling DealsApi.deal_info_dealid_get"
      end
      # resource path
      local_var_path = '/deal/info/{dealid}'.sub('{' + 'dealid' + '}', dealid.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#deal_info_dealid_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Proposal
    # This endpoint returns the proposal for a deal
    # @param propcid Proposal CID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def deal_proposal_propcid_get(propcid, opts = {})
      deal_proposal_propcid_get_with_http_info(propcid, opts)
      nil
    end

    # Get Proposal
    # This endpoint returns the proposal for a deal
    # @param propcid Proposal CID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def deal_proposal_propcid_get_with_http_info(propcid, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.deal_proposal_propcid_get ...'
      end
      # verify the required parameter 'propcid' is set
      if @api_client.config.client_side_validation && propcid.nil?
        fail ArgumentError, "Missing the required parameter 'propcid' when calling DealsApi.deal_proposal_propcid_get"
      end
      # resource path
      local_var_path = '/deal/proposal/{propcid}'.sub('{' + 'propcid' + '}', propcid.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#deal_proposal_propcid_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Query Ask
    # This endpoint returns the ask for a given CID
    # @param miner CID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def deal_query_miner_get(miner, opts = {})
      deal_query_miner_get_with_http_info(miner, opts)
      nil
    end

    # Query Ask
    # This endpoint returns the ask for a given CID
    # @param miner CID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def deal_query_miner_get_with_http_info(miner, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.deal_query_miner_get ...'
      end
      # verify the required parameter 'miner' is set
      if @api_client.config.client_side_validation && miner.nil?
        fail ArgumentError, "Missing the required parameter 'miner' when calling DealsApi.deal_query_miner_get"
      end
      # resource path
      local_var_path = '/deal/query/{miner}'.sub('{' + 'miner' + '}', miner.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#deal_query_miner_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Deal Status by PropCid
    # Get Deal Status by PropCid
    # @param propcid PropCid
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def deal_status_by_proposal_propcid_get(propcid, opts = {})
      deal_status_by_proposal_propcid_get_with_http_info(propcid, opts)
      nil
    end

    # Get Deal Status by PropCid
    # Get Deal Status by PropCid
    # @param propcid PropCid
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def deal_status_by_proposal_propcid_get_with_http_info(propcid, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.deal_status_by_proposal_propcid_get ...'
      end
      # verify the required parameter 'propcid' is set
      if @api_client.config.client_side_validation && propcid.nil?
        fail ArgumentError, "Missing the required parameter 'propcid' when calling DealsApi.deal_status_by_proposal_propcid_get"
      end
      # resource path
      local_var_path = '/deal/status-by-proposal/{propcid}'.sub('{' + 'propcid' + '}', propcid.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#deal_status_by_proposal_propcid_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Deal Status
    # This endpoint returns the status of a deal
    # @param miner Miner
    # @param propcid Proposal CID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def deal_status_miner_propcid_get(miner, propcid, opts = {})
      deal_status_miner_propcid_get_with_http_info(miner, propcid, opts)
      nil
    end

    # Deal Status
    # This endpoint returns the status of a deal
    # @param miner Miner
    # @param propcid Proposal CID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def deal_status_miner_propcid_get_with_http_info(miner, propcid, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.deal_status_miner_propcid_get ...'
      end
      # verify the required parameter 'miner' is set
      if @api_client.config.client_side_validation && miner.nil?
        fail ArgumentError, "Missing the required parameter 'miner' when calling DealsApi.deal_status_miner_propcid_get"
      end
      # verify the required parameter 'propcid' is set
      if @api_client.config.client_side_validation && propcid.nil?
        fail ArgumentError, "Missing the required parameter 'propcid' when calling DealsApi.deal_status_miner_propcid_get"
      end
      # resource path
      local_var_path = '/deal/status/{miner}/{propcid}'.sub('{' + 'miner' + '}', miner.to_s).sub('{' + 'propcid' + '}', propcid.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#deal_status_miner_propcid_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Transfer In Progress
    # This endpoint returns the in-progress transfers
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def deal_transfer_in_progress_get(opts = {})
      deal_transfer_in_progress_get_with_http_info(opts)
      nil
    end

    # Transfer In Progress
    # This endpoint returns the in-progress transfers
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def deal_transfer_in_progress_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.deal_transfer_in_progress_get ...'
      end
      # resource path
      local_var_path = '/deal/transfer/in-progress'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#deal_transfer_in_progress_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Transfer Status
    # This endpoint returns the status of a transfer
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def deal_transfer_status_post(opts = {})
      deal_transfer_status_post_with_http_info(opts)
      nil
    end

    # Transfer Status
    # This endpoint returns the status of a transfer
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def deal_transfer_status_post_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.deal_transfer_status_post ...'
      end
      # resource path
      local_var_path = '/deal/transfer/status'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#deal_transfer_status_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get storage failures for user
    # This endpoint returns a list of storage failures for user
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def deals_failures_get(opts = {})
      deals_failures_get_with_http_info(opts)
      nil
    end

    # Get storage failures for user
    # This endpoint returns a list of storage failures for user
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def deals_failures_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.deals_failures_get ...'
      end
      # resource path
      local_var_path = '/deals/failures'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#deals_failures_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Make Deal
    # This endpoint makes a deal for a given content and miner
    # @param miner Miner
    # @param deal_request Deal Request
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def deals_make_miner_post(miner, deal_request, opts = {})
      deals_make_miner_post_with_http_info(miner, deal_request, opts)
      nil
    end

    # Make Deal
    # This endpoint makes a deal for a given content and miner
    # @param miner Miner
    # @param deal_request Deal Request
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def deals_make_miner_post_with_http_info(miner, deal_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.deals_make_miner_post ...'
      end
      # verify the required parameter 'miner' is set
      if @api_client.config.client_side_validation && miner.nil?
        fail ArgumentError, "Missing the required parameter 'miner' when calling DealsApi.deals_make_miner_post"
      end
      # verify the required parameter 'deal_request' is set
      if @api_client.config.client_side_validation && deal_request.nil?
        fail ArgumentError, "Missing the required parameter 'deal_request' when calling DealsApi.deals_make_miner_post"
      end
      # resource path
      local_var_path = '/deals/make/{miner}'.sub('{' + 'miner' + '}', miner.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(deal_request)
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#deals_make_miner_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Deal Status
    # This endpoint returns the status of a deal
    # @param deal Deal ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def deals_status_deal_get(deal, opts = {})
      deals_status_deal_get_with_http_info(deal, opts)
      nil
    end

    # Get Deal Status
    # This endpoint returns the status of a deal
    # @param deal Deal ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def deals_status_deal_get_with_http_info(deal, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.deals_status_deal_get ...'
      end
      # verify the required parameter 'deal' is set
      if @api_client.config.client_side_validation && deal.nil?
        fail ArgumentError, "Missing the required parameter 'deal' when calling DealsApi.deals_status_deal_get"
      end
      # resource path
      local_var_path = '/deals/status/{deal}'.sub('{' + 'deal' + '}', deal.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#deals_status_deal_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get storage failures
    # This endpoint returns a list of storage failures
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def public_deals_failures_get(opts = {})
      public_deals_failures_get_with_http_info(opts)
      nil
    end

    # Get storage failures
    # This endpoint returns a list of storage failures
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def public_deals_failures_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.public_deals_failures_get ...'
      end
      # resource path
      local_var_path = '/public/deals/failures'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#public_deals_failures_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Query Ask
    # This endpoint returns the ask for a given CID
    # @param miner CID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def public_miners_storage_query_miner_get(miner, opts = {})
      public_miners_storage_query_miner_get_with_http_info(miner, opts)
      nil
    end

    # Query Ask
    # This endpoint returns the ask for a given CID
    # @param miner CID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def public_miners_storage_query_miner_get_with_http_info(miner, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DealsApi.public_miners_storage_query_miner_get ...'
      end
      # verify the required parameter 'miner' is set
      if @api_client.config.client_side_validation && miner.nil?
        fail ArgumentError, "Missing the required parameter 'miner' when calling DealsApi.public_miners_storage_query_miner_get"
      end
      # resource path
      local_var_path = '/public/miners/storage/query/{miner}'.sub('{' + 'miner' + '}', miner.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DealsApi#public_miners_storage_query_miner_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
