#import <Foundation/Foundation.h>
#import "SWGUtilHttpError.h"
#import "SWGApi.h"

/**
* Estuary API
* This is the API for the Estuary application.
*
* OpenAPI spec version: 0.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGAdminApi: NSObject <SWGApi>

extern NSString* kSWGAdminApiErrorDomain;
extern NSInteger kSWGAdminApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Remove peers on Peering Service
/// This endpoint can be used to remove a Peer from the Peering Service
///
/// @param peerIds Peer ids
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return NSString*
-(NSURLSessionTask*) adminPeeringPeersDeleteWithPeerIds: (NSArray<NSNumber*>*) peerIds
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// List all Peering peers
/// This endpoint can be used to list all peers on Peering Service
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return NSString*
-(NSURLSessionTask*) adminPeeringPeersGetWithCompletionHandler: 
    (void (^)(NSString* output, NSError* error)) handler;


/// Add peers on Peering Service
/// This endpoint can be used to add a Peer from the Peering Service
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return NSString*
-(NSURLSessionTask*) adminPeeringPeersPostWithCompletionHandler: 
    (void (^)(NSString* output, NSError* error)) handler;


/// Start Peering
/// This endpoint can be used to start the Peering Service
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return NSString*
-(NSURLSessionTask*) adminPeeringStartPostWithCompletionHandler: 
    (void (^)(NSString* output, NSError* error)) handler;


/// Check Peering Status
/// This endpoint can be used to check the Peering status
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return NSString*
-(NSURLSessionTask*) adminPeeringStatusGetWithCompletionHandler: 
    (void (^)(NSString* output, NSError* error)) handler;


/// Stop Peering
/// This endpoint can be used to stop the Peering Service
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return NSString*
-(NSURLSessionTask*) adminPeeringStopPostWithCompletionHandler: 
    (void (^)(NSString* output, NSError* error)) handler;


/// Get systems(estuary/shuttle) config
/// This endpoint is used to get system configs.
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return NSString*
-(NSURLSessionTask*) adminSystemConfigGetWithCompletionHandler: 
    (void (^)(NSString* output, NSError* error)) handler;


/// Get all users
/// This endpoint is used to get all users.
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return NSString*
-(NSURLSessionTask*) adminUsersGetWithCompletionHandler: 
    (void (^)(NSString* output, NSError* error)) handler;



@end
