//
// PinningAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class PinningAPI: APIBase {
    /**
     List all pin status objects
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func pinningPinsGet(completion: ((data: String?, error: ErrorType?) -> Void)) {
        pinningPinsGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List all pin status objects
     - GET /pinning/pins
     - This endpoint lists all pin status objects
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     - examples: [{contentType=application/json, example={
  "bytes": [],
  "empty": true
}}]

     - returns: RequestBuilder<String> 
     */
    public class func pinningPinsGetWithRequestBuilder() -> RequestBuilder<String> {
        let path = "/pinning/pins"
        let URLString = estuary-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = estuary-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a pinned object
     
     - parameter pinid: (path) Pin ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func pinningPinsPinidDelete(pinid pinid: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        pinningPinsPinidDeleteWithRequestBuilder(pinid: pinid).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a pinned object
     - DELETE /pinning/pins/{pinid}
     - This endpoint deletes a pinned object.
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     - examples: [{contentType=application/json, example={
  "bytes": [],
  "empty": true
}}]
     
     - parameter pinid: (path) Pin ID 

     - returns: RequestBuilder<String> 
     */
    public class func pinningPinsPinidDeleteWithRequestBuilder(pinid pinid: String) -> RequestBuilder<String> {
        var path = "/pinning/pins/{pinid}"
        path = path.stringByReplacingOccurrencesOfString("{pinid}", withString: "\(pinid)", options: .LiteralSearch, range: nil)
        let URLString = estuary-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = estuary-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a pin status object
     
     - parameter pinid: (path) cid 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func pinningPinsPinidGet(pinid pinid: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        pinningPinsPinidGetWithRequestBuilder(pinid: pinid).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a pin status object
     - GET /pinning/pins/{pinid}
     - This endpoint returns a pin status object.
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     - examples: [{contentType=application/json, example={
  "bytes": [],
  "empty": true
}}]
     
     - parameter pinid: (path) cid 

     - returns: RequestBuilder<String> 
     */
    public class func pinningPinsPinidGetWithRequestBuilder(pinid pinid: String) -> RequestBuilder<String> {
        var path = "/pinning/pins/{pinid}"
        path = path.stringByReplacingOccurrencesOfString("{pinid}", withString: "\(pinid)", options: .LiteralSearch, range: nil)
        let URLString = estuary-clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = estuary-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Replace a pinned object
     
     - parameter pinid: (path) Pin ID 
     - parameter cid: (body) CID of new pin 
     - parameter name: (body) Name (filename) of new pin (optional)
     - parameter origins: (body) Origins of new pin (optional)
     - parameter meta: (body) Meta information of new pin (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func pinningPinsPinidPost(pinid pinid: String, cid: String, name: String? = nil, origins: String? = nil, meta: String? = nil, completion: ((data: String?, error: ErrorType?) -> Void)) {
        pinningPinsPinidPostWithRequestBuilder(pinid: pinid, cid: cid, name: name, origins: origins, meta: meta).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replace a pinned object
     - POST /pinning/pins/{pinid}
     - This endpoint replaces a pinned object.
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     - examples: [{contentType=application/json, example={
  "bytes": [],
  "empty": true
}}]
     
     - parameter pinid: (path) Pin ID 
     - parameter cid: (body) CID of new pin 
     - parameter name: (body) Name (filename) of new pin (optional)
     - parameter origins: (body) Origins of new pin (optional)
     - parameter meta: (body) Meta information of new pin (optional)

     - returns: RequestBuilder<String> 
     */
    public class func pinningPinsPinidPostWithRequestBuilder(pinid pinid: String, cid: String, name: String? = nil, origins: String? = nil, meta: String? = nil) -> RequestBuilder<String> {
        var path = "/pinning/pins/{pinid}"
        path = path.stringByReplacingOccurrencesOfString("{pinid}", withString: "\(pinid)", options: .LiteralSearch, range: nil)
        let URLString = estuary-clientAPI.basePath + path
        let parameters = meta?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = estuary-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add and pin object
     
     - parameter pin: (body) Pin Body {cid:cid, name:name} 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func pinningPinsPost(pin pin: TypesIpfsPin, completion: ((data: String?, error: ErrorType?) -> Void)) {
        pinningPinsPostWithRequestBuilder(pin: pin).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Add and pin object
     - POST /pinning/pins
     - This endpoint adds a pin to the IPFS daemon.
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     - examples: [{contentType=application/json, example={
  "bytes": [],
  "empty": true
}}]
     
     - parameter pin: (body) Pin Body {cid:cid, name:name} 

     - returns: RequestBuilder<String> 
     */
    public class func pinningPinsPostWithRequestBuilder(pin pin: TypesIpfsPin) -> RequestBuilder<String> {
        let path = "/pinning/pins"
        let URLString = estuary-clientAPI.basePath + path
        let parameters = pin.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = estuary-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
