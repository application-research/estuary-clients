//
// CollectionsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class CollectionsAPI: APIBase {
    /**
     Produce a CID of the collection contents
     
     - parameter coluuid: (path) coluuid 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func collectionsColuuidCommitPost(coluuid coluuid: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        collectionsColuuidCommitPostWithRequestBuilder(coluuid: coluuid).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Produce a CID of the collection contents
     - POST /collections/{coluuid}/commit
     - This endpoint is used to save the contents in a collection, producing a top-level CID that references all the current CIDs in the collection.
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     - examples: [{contentType=application/json, example={
  "bytes": [],
  "empty": true
}}]
     
     - parameter coluuid: (path) coluuid 

     - returns: RequestBuilder<String> 
     */
    public class func collectionsColuuidCommitPostWithRequestBuilder(coluuid coluuid: String) -> RequestBuilder<String> {
        var path = "/collections/{coluuid}/commit"
        path = path.stringByReplacingOccurrencesOfString("{coluuid}", withString: "\(coluuid)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a collection
     
     - parameter coluuid: (path) Collection ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func collectionsColuuidDelete(coluuid coluuid: String, completion: ((error: ErrorType?) -> Void)) {
        collectionsColuuidDeleteWithRequestBuilder(coluuid: coluuid).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Deletes a collection
     - DELETE /collections/{coluuid}
     - This endpoint is used to delete an existing collection.
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     
     - parameter coluuid: (path) Collection ID 

     - returns: RequestBuilder<Void> 
     */
    public class func collectionsColuuidDeleteWithRequestBuilder(coluuid coluuid: String) -> RequestBuilder<Void> {
        var path = "/collections/{coluuid}"
        path = path.stringByReplacingOccurrencesOfString("{coluuid}", withString: "\(coluuid)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get contents in a collection
     
     - parameter coluuid: (query) Collection UUID 
     - parameter dir: (query) Directory (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func collectionsColuuidGet(coluuid coluuid: String, dir: String? = nil, completion: ((data: String?, error: ErrorType?) -> Void)) {
        collectionsColuuidGetWithRequestBuilder(coluuid: coluuid, dir: dir).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get contents in a collection
     - GET /collections/{coluuid}
     - This endpoint is used to get contents in a collection. If no colpath query param is passed
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     - examples: [{contentType=application/json, example={
  "bytes": [],
  "empty": true
}}]
     
     - parameter coluuid: (query) Collection UUID 
     - parameter dir: (query) Directory (optional)

     - returns: RequestBuilder<String> 
     */
    public class func collectionsColuuidGetWithRequestBuilder(coluuid coluuid: String, dir: String? = nil) -> RequestBuilder<String> {
        let path = "/collections/{coluuid}"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "coluuid": coluuid,
            "dir": dir
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Add contents to a collection
     
     - parameter body: (body) Content IDs to add to collection 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func collectionsColuuidPost(body body: [Int32], completion: ((data: [String:String]?, error: ErrorType?) -> Void)) {
        collectionsColuuidPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Add contents to a collection
     - POST /collections/{coluuid}
     - This endpoint adds already-pinned contents (that have ContentIDs) to a collection.
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter body: (body) Content IDs to add to collection 

     - returns: RequestBuilder<[String:String]> 
     */
    public class func collectionsColuuidPostWithRequestBuilder(body body: [Int32]) -> RequestBuilder<[String:String]> {
        let path = "/collections/{coluuid}"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[String:String]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add a file to a collection
     
     - parameter coluuid: (query) Collection ID 
     - parameter content: (query) Content 
     - parameter path: (query) Path to file 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func collectionsFsAddPost(coluuid coluuid: String, content: String, path: String, completion: ((error: ErrorType?) -> Void)) {
        collectionsFsAddPostWithRequestBuilder(coluuid: coluuid, content: content, path: path).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Add a file to a collection
     - POST /collections/fs/add
     - This endpoint adds a file to a collection
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     
     - parameter coluuid: (query) Collection ID 
     - parameter content: (query) Content 
     - parameter path: (query) Path to file 

     - returns: RequestBuilder<Void> 
     */
    public class func collectionsFsAddPostWithRequestBuilder(coluuid coluuid: String, content: String, path: String) -> RequestBuilder<Void> {
        let path = "/collections/fs/add"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "coluuid": coluuid,
            "content": content,
            "path": path
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     List all collections
     
     - parameter id: (path) User ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func collectionsGet(id id: Int32, completion: ((data: [MainCollection]?, error: ErrorType?) -> Void)) {
        collectionsGetWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List all collections
     - GET /collections/
     - This endpoint is used to list all collections. Whenever a user logs on estuary, it will list all collections that the user has access to. This endpoint provides a way to list all collections to the user.
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     - examples: [{contentType=application/json, example={}}]
     
     - parameter id: (path) User ID 

     - returns: RequestBuilder<[MainCollection]> 
     */
    public class func collectionsGetWithRequestBuilder(id id: Int32) -> RequestBuilder<[MainCollection]> {
        var path = "/collections/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[MainCollection]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a new collection
     
     - parameter body: (body) Collection name and description 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func collectionsPost(body body: MainCreateCollectionBody, completion: ((data: MainCollection?, error: ErrorType?) -> Void)) {
        collectionsPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a new collection
     - POST /collections/
     - This endpoint is used to create a new collection. A collection is a representaion of a group of objects added on the estuary. This endpoint can be used to create a new collection.
     - API Key:
       - type: apiKey Authorization 
       - name: bearerAuth
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter body: (body) Collection name and description 

     - returns: RequestBuilder<MainCollection> 
     */
    public class func collectionsPostWithRequestBuilder(body body: MainCreateCollectionBody) -> RequestBuilder<MainCollection> {
        let path = "/collections/"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MainCollection>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
