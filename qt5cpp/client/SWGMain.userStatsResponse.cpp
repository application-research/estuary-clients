/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGMain.userStatsResponse.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGMain.userStatsResponse::SWGMain.userStatsResponse(QString json) {
    init();
    this->fromJson(json);
}

SWGMain.userStatsResponse::SWGMain.userStatsResponse() {
    init();
}

SWGMain.userStatsResponse::~SWGMain.userStatsResponse() {
    this->cleanup();
}

void
SWGMain.userStatsResponse::init() {
    num_pins = 0;
    m_num_pins_isSet = false;
    total_size = 0;
    m_total_size_isSet = false;
}

void
SWGMain.userStatsResponse::cleanup() {


}

SWGMain.userStatsResponse*
SWGMain.userStatsResponse::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGMain.userStatsResponse::fromJsonObject(QJsonObject pJson) {
    ::Swagger::setValue(&num_pins, pJson["numPins"], "qint32", "");
    
    ::Swagger::setValue(&total_size, pJson["totalSize"], "qint32", "");
    
}

QString
SWGMain.userStatsResponse::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
SWGMain.userStatsResponse::asJsonObject() {
    QJsonObject obj;
    if(m_num_pins_isSet){
        obj.insert("numPins", QJsonValue(num_pins));
    }
    if(m_total_size_isSet){
        obj.insert("totalSize", QJsonValue(total_size));
    }

    return obj;
}

qint32
SWGMain.userStatsResponse::getNumPins() {
    return num_pins;
}
void
SWGMain.userStatsResponse::setNumPins(qint32 num_pins) {
    this->num_pins = num_pins;
    this->m_num_pins_isSet = true;
}

qint32
SWGMain.userStatsResponse::getTotalSize() {
    return total_size;
}
void
SWGMain.userStatsResponse::setTotalSize(qint32 total_size) {
    this->total_size = total_size;
    this->m_total_size_isSet = true;
}


bool
SWGMain.userStatsResponse::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m_num_pins_isSet){ isObjectUpdated = true; break;}
        if(m_total_size_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

