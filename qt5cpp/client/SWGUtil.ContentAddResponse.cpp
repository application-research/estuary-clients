/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGUtil.ContentAddResponse.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGUtil.ContentAddResponse::SWGUtil.ContentAddResponse(QString json) {
    init();
    this->fromJson(json);
}

SWGUtil.ContentAddResponse::SWGUtil.ContentAddResponse() {
    init();
}

SWGUtil.ContentAddResponse::~SWGUtil.ContentAddResponse() {
    this->cleanup();
}

void
SWGUtil.ContentAddResponse::init() {
    cid = new QString("");
    m_cid_isSet = false;
    estuary_id = 0;
    m_estuary_id_isSet = false;
    providers = new QList<QString*>();
    m_providers_isSet = false;
    retrieval_url = new QString("");
    m_retrieval_url_isSet = false;
}

void
SWGUtil.ContentAddResponse::cleanup() {
    if(cid != nullptr) { 
        delete cid;
    }

    if(providers != nullptr) { 
        auto arr = providers;
        for(auto o: *arr) { 
            delete o;
        }
        delete providers;
    }
    if(retrieval_url != nullptr) { 
        delete retrieval_url;
    }
}

SWGUtil.ContentAddResponse*
SWGUtil.ContentAddResponse::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGUtil.ContentAddResponse::fromJsonObject(QJsonObject pJson) {
    ::Swagger::setValue(&cid, pJson["cid"], "QString", "QString");
    
    ::Swagger::setValue(&estuary_id, pJson["estuaryId"], "qint32", "");
    
    
    ::Swagger::setValue(&providers, pJson["providers"], "QList", "QString");
    ::Swagger::setValue(&retrieval_url, pJson["retrieval_url"], "QString", "QString");
    
}

QString
SWGUtil.ContentAddResponse::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
SWGUtil.ContentAddResponse::asJsonObject() {
    QJsonObject obj;
    if(cid != nullptr && *cid != QString("")){
        toJsonValue(QString("cid"), cid, obj, QString("QString"));
    }
    if(m_estuary_id_isSet){
        obj.insert("estuaryId", QJsonValue(estuary_id));
    }
    if(providers->size() > 0){
        toJsonArray((QList<void*>*)providers, obj, "providers", "QString");
    }
    if(retrieval_url != nullptr && *retrieval_url != QString("")){
        toJsonValue(QString("retrieval_url"), retrieval_url, obj, QString("QString"));
    }

    return obj;
}

QString*
SWGUtil.ContentAddResponse::getCid() {
    return cid;
}
void
SWGUtil.ContentAddResponse::setCid(QString* cid) {
    this->cid = cid;
    this->m_cid_isSet = true;
}

qint32
SWGUtil.ContentAddResponse::getEstuaryId() {
    return estuary_id;
}
void
SWGUtil.ContentAddResponse::setEstuaryId(qint32 estuary_id) {
    this->estuary_id = estuary_id;
    this->m_estuary_id_isSet = true;
}

QList<QString*>*
SWGUtil.ContentAddResponse::getProviders() {
    return providers;
}
void
SWGUtil.ContentAddResponse::setProviders(QList<QString*>* providers) {
    this->providers = providers;
    this->m_providers_isSet = true;
}

QString*
SWGUtil.ContentAddResponse::getRetrievalUrl() {
    return retrieval_url;
}
void
SWGUtil.ContentAddResponse::setRetrievalUrl(QString* retrieval_url) {
    this->retrieval_url = retrieval_url;
    this->m_retrieval_url_isSet = true;
}


bool
SWGUtil.ContentAddResponse::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cid != nullptr && *cid != QString("")){ isObjectUpdated = true; break;}
        if(m_estuary_id_isSet){ isObjectUpdated = true; break;}
        if(providers->size() > 0){ isObjectUpdated = true; break;}
        if(retrieval_url != nullptr && *retrieval_url != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

