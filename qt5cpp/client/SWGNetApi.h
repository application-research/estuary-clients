/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGNetApi_H_
#define _SWG_SWGNetApi_H_

#include "SWGHttpRequest.h"

#include <QString>

#include <QObject>

namespace Swagger {

class SWGNetApi: public QObject {
    Q_OBJECT

public:
    SWGNetApi();
    SWGNetApi(QString host, QString basePath);
    ~SWGNetApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void netAddrsGet();
    void publicMinersFailuresMinerGet(QString* miner);
    void publicMinersGet();
    void publicNetAddrsGet();
    void publicNetPeersGet();
    
private:
    void netAddrsGetCallback (SWGHttpRequestWorker * worker);
    void publicMinersFailuresMinerGetCallback (SWGHttpRequestWorker * worker);
    void publicMinersGetCallback (SWGHttpRequestWorker * worker);
    void publicNetAddrsGetCallback (SWGHttpRequestWorker * worker);
    void publicNetPeersGetCallback (SWGHttpRequestWorker * worker);
    
signals:
    void netAddrsGetSignal(QList<QString*>* summary);
    void publicMinersFailuresMinerGetSignal();
    void publicMinersGetSignal();
    void publicNetAddrsGetSignal(QList<QString*>* summary);
    void publicNetPeersGetSignal(QList<QString*>* summary);
    
    void netAddrsGetSignalE(QList<QString*>* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void publicMinersFailuresMinerGetSignalE(QNetworkReply::NetworkError error_type, QString& error_str);
    void publicMinersGetSignalE(QNetworkReply::NetworkError error_type, QString& error_str);
    void publicNetAddrsGetSignalE(QList<QString*>* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void publicNetPeersGetSignalE(QList<QString*>* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    
    void netAddrsGetSignalEFull(SWGHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void publicMinersFailuresMinerGetSignalEFull(SWGHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void publicMinersGetSignalEFull(SWGHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void publicNetAddrsGetSignalEFull(SWGHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void publicNetPeersGetSignalEFull(SWGHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
