/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.28.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Util.ContentAddResponse.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_Util.ContentAddResponse_H_
#define IO_SWAGGER_CLIENT_MODEL_Util.ContentAddResponse_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Util.ContentAddResponse
    : public ModelBase
{
public:
    Util.ContentAddResponse();
    virtual ~Util.ContentAddResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Util.ContentAddResponse members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCid() const;
    bool cidIsSet() const;
    void unsetCid();
    void setCid(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getEstuaryId() const;
    bool estuaryIdIsSet() const;
    void unsetEstuaryId();
    void setEstuaryId(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getProviders();
    bool providersIsSet() const;
    void unsetProviders();
    void setProviders(std::vector<utility::string_t> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRetrievalUrl() const;
    bool retrievalUrlIsSet() const;
    void unsetRetrieval_url();
    void setRetrievalUrl(utility::string_t value);

protected:
    utility::string_t m_Cid;
    bool m_CidIsSet;
    int32_t m_EstuaryId;
    bool m_EstuaryIdIsSet;
    std::vector<utility::string_t> m_Providers;
    bool m_ProvidersIsSet;
    utility::string_t m_Retrieval_url;
    bool m_Retrieval_urlIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_Util.ContentAddResponse_H_ */
