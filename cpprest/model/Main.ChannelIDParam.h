/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.28.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Main.ChannelIDParam.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_Main.ChannelIDParam_H_
#define IO_SWAGGER_CLIENT_MODEL_Main.ChannelIDParam_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Main.ChannelIDParam
    : public ModelBase
{
public:
    Main.ChannelIDParam();
    virtual ~Main.ChannelIDParam();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Main.ChannelIDParam members

    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getInitiator() const;
    bool initiatorIsSet() const;
    void unsetInitiator();
    void setInitiator(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getResponder() const;
    bool responderIsSet() const;
    void unsetResponder();
    void setResponder(utility::string_t value);

protected:
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Initiator;
    bool m_InitiatorIsSet;
    utility::string_t m_Responder;
    bool m_ResponderIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_Main.ChannelIDParam_H_ */
