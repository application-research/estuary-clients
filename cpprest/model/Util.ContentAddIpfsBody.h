/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.28.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Util.ContentAddIpfsBody.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_Util.ContentAddIpfsBody_H_
#define IO_SWAGGER_CLIENT_MODEL_Util.ContentAddIpfsBody_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Util.ContentAddIpfsBody
    : public ModelBase
{
public:
    Util.ContentAddIpfsBody();
    virtual ~Util.ContentAddIpfsBody();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Util.ContentAddIpfsBody members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getColuuid() const;
    bool coluuidIsSet() const;
    void unsetColuuid();
    void setColuuid(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDir() const;
    bool dirIsSet() const;
    void unsetDir();
    void setDir(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFilename() const;
    bool filenameIsSet() const;
    void unsetFilename();
    void setFilename(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getPeers();
    bool peersIsSet() const;
    void unsetPeers();
    void setPeers(std::vector<utility::string_t> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRoot() const;
    bool rootIsSet() const;
    void unsetRoot();
    void setRoot(utility::string_t value);

protected:
    utility::string_t m_Coluuid;
    bool m_ColuuidIsSet;
    utility::string_t m_Dir;
    bool m_DirIsSet;
    utility::string_t m_Filename;
    bool m_FilenameIsSet;
    std::vector<utility::string_t> m_Peers;
    bool m_PeersIsSet;
    utility::string_t m_Root;
    bool m_RootIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_Util.ContentAddIpfsBody_H_ */
