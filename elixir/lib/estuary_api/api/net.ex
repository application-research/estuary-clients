# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule EstuaryAPI.Api.Net do
  @moduledoc """
  API calls for all endpoints tagged `Net`.
  """

  alias EstuaryAPI.Connection
  import EstuaryAPI.RequestBuilder


  @doc """
  Net Addrs
  This endpoint is used to get net addrs

  ## Parameters

  - connection (EstuaryAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, [%String{}, ...]} on success
  {:error, info} on failure
  """
  @spec net_addrs_get(Tesla.Env.client, keyword()) :: {:ok, list(String.t)} | {:error, Tesla.Env.t}
  def net_addrs_get(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/net/addrs")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode([%EstuaryAPI.Model.String{}])
  end

  @doc """
  Get all miners
  This endpoint returns all miners

  ## Parameters

  - connection (EstuaryAPI.Connection): Connection to server
  - miner (String.t): Filter by miner
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec public_miners_failures_miner_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def public_miners_failures_miner_get(connection, miner, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/public/miners/failures/#{miner}")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Get all miners
  This endpoint returns all miners

  ## Parameters

  - connection (EstuaryAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec public_miners_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def public_miners_get(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/public/miners")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Net Addrs
  This endpoint is used to get net addrs

  ## Parameters

  - connection (EstuaryAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, [%String{}, ...]} on success
  {:error, info} on failure
  """
  @spec public_net_addrs_get(Tesla.Env.client, keyword()) :: {:ok, list(String.t)} | {:error, Tesla.Env.t}
  def public_net_addrs_get(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/public/net/addrs")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode([%EstuaryAPI.Model.String{}])
  end

  @doc """
  Net Peers
  This endpoint is used to get net peers

  ## Parameters

  - connection (EstuaryAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, [%String{}, ...]} on success
  {:error, info} on failure
  """
  @spec public_net_peers_get(Tesla.Env.client, keyword()) :: {:ok, list(String.t)} | {:error, Tesla.Env.t}
  def public_net_peers_get(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/public/net/peers")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode([%EstuaryAPI.Model.String{}])
  end
end
