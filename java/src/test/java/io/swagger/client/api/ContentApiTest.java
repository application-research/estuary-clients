/*
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import java.io.File;
import io.swagger.client.model.MainImportDealBody;
import io.swagger.client.model.UtilContentAddIpfsBody;
import io.swagger.client.model.UtilContentAddResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContentApi
 */
@Ignore
public class ContentApiTest {

    private final ContentApi api = new ContentApi();

    
    /**
     * Add Car object
     *
     * This endpoint is used to add a car object to the network. The object can be a file or a directory.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentAddCarPostTest() throws Exception {
        String body = null;
        String filename = null;
        String commp = null;
        String size = null;
        api.contentAddCarPost(body, filename, commp, size);

        // TODO: test validations
    }
    
    /**
     * Add IPFS object
     *
     * This endpoint is used to add an IPFS object to the network. The object can be a file or a directory.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentAddIpfsPostTest() throws Exception {
        UtilContentAddIpfsBody body = null;
        api.contentAddIpfsPost(body);

        // TODO: test validations
    }
    
    /**
     * Add new content
     *
     * This endpoint is used to upload new content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentAddPostTest() throws Exception {
        File file = null;
        String coluuid = null;
        String dir = null;
        UtilContentAddResponse response = api.contentAddPost(file, coluuid, dir);

        // TODO: test validations
    }
    
    /**
     * Get aggregated content stats
     *
     * This endpoint returns aggregated content stats
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentAggregatedContentGetTest() throws Exception {
        String content = null;
        String response = api.contentAggregatedContentGet(content);

        // TODO: test validations
    }
    
    /**
     * Get all deals for a user
     *
     * This endpoint is used to get all deals for a user
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentAllDealsGetTest() throws Exception {
        String begin = null;
        String duration = null;
        String all = null;
        api.contentAllDealsGet(begin, duration, all);

        // TODO: test validations
    }
    
    /**
     * Get content bandwidth
     *
     * This endpoint returns content bandwidth
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentBwUsageContentGetTest() throws Exception {
        String content = null;
        api.contentBwUsageContentGet(content);

        // TODO: test validations
    }
    
    /**
     * Add a new content
     *
     * This endpoint adds a new content
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentCreatePostTest() throws Exception {
        String body = null;
        api.contentCreatePost(body);

        // TODO: test validations
    }
    
    /**
     * Content with deals
     *
     * This endpoint lists all content with deals
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentDealsGetTest() throws Exception {
        Integer limit = null;
        Integer offset = null;
        api.contentDealsGet(limit, offset);

        // TODO: test validations
    }
    
    /**
     * Ensure Replication
     *
     * This endpoint ensures that the content is replicated to the specified number of providers
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentEnsureReplicationDatacidGetTest() throws Exception {
        String datacid = null;
        api.contentEnsureReplicationDatacidGet(datacid);

        // TODO: test validations
    }
    
    /**
     * List all failures for a content
     *
     * This endpoint returns all failures for a content
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentFailuresContentGetTest() throws Exception {
        String content = null;
        String response = api.contentFailuresContentGet(content);

        // TODO: test validations
    }
    
    /**
     * Import a deal
     *
     * This endpoint imports a deal into the shuttle.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentImportdealPostTest() throws Exception {
        MainImportDealBody body = null;
        api.contentImportdealPost(body);

        // TODO: test validations
    }
    
    /**
     * List all pinned content
     *
     * This endpoint lists all content
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentListGetTest() throws Exception {
        List<String> response = api.contentListGet();

        // TODO: test validations
    }
    
    /**
     * Read content
     *
     * This endpoint reads content from the blockstore
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentReadContGetTest() throws Exception {
        String cont = null;
        api.contentReadContGet(cont);

        // TODO: test validations
    }
    
    /**
     * Get staging zone for user
     *
     * This endpoint is used to get staging zone for user.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentStagingZonesGetTest() throws Exception {
        api.contentStagingZonesGet();

        // TODO: test validations
    }
    
    /**
     * Get content statistics
     *
     * This endpoint is used to get content statistics. Every content stored in the network (estuary) is tracked by a unique ID which can be used to get information about the content. This endpoint will allow the consumer to get the collected stats of a conten
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentStatsGetTest() throws Exception {
        String limit = null;
        api.contentStatsGet(limit);

        // TODO: test validations
    }
    
    /**
     * Content Status
     *
     * This endpoint returns the status of a content
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void contentStatusIdGetTest() throws Exception {
        Integer id = null;
        api.contentStatusIdGet(id);

        // TODO: test validations
    }
    
}
