{-
   Estuary API

   This is the API for the Estuary application.

   OpenAPI spec version: 2.0
   Estuary API API version: 0.0.0
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : Estuary.API.Deals
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Estuary.API.Deals where

import Estuary.Core
import Estuary.MimeTypes
import Estuary.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Deals

-- *** dealEstimatePost

-- | @POST \/deal\/estimate@
-- 
-- Estimate the cost of a deal
-- 
-- This endpoint estimates the cost of a deal
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
dealEstimatePost 
  :: (Consumes DealEstimatePost contentType, MimeRender contentType MainEstimateDealBody)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> MainEstimateDealBody -- ^ "body" -  The size of the deal in bytes, the replication factor, and the duration of the deal in blocks
  -> EstuaryRequest DealEstimatePost contentType Text MimeJSON
dealEstimatePost _ body =
  _mkRequest "POST" ["/deal/estimate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)
    `setBodyParam` body

data DealEstimatePost 

-- | /Body Param/ "body" - The size of the deal in bytes, the replication factor, and the duration of the deal in blocks
instance HasBodyParam DealEstimatePost MainEstimateDealBody 
-- | @application/json@
instance Produces DealEstimatePost MimeJSON


-- *** dealInfoDealidGet

-- | @GET \/deal\/info\/{dealid}@
-- 
-- Get Deal Info
-- 
-- This endpoint returns the deal info for a deal
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
dealInfoDealidGet 
  :: Dealid -- ^ "dealid" -  Deal ID
  -> EstuaryRequest DealInfoDealidGet MimeNoContent Text MimeJSON
dealInfoDealidGet (Dealid dealid) =
  _mkRequest "GET" ["/deal/info/",toPath dealid]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)

data DealInfoDealidGet  
-- | @application/json@
instance Produces DealInfoDealidGet MimeJSON


-- *** dealProposalPropcidGet

-- | @GET \/deal\/proposal\/{propcid}@
-- 
-- Get Proposal
-- 
-- This endpoint returns the proposal for a deal
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
dealProposalPropcidGet 
  :: Propcid -- ^ "propcid" -  Proposal CID
  -> EstuaryRequest DealProposalPropcidGet MimeNoContent Text MimeJSON
dealProposalPropcidGet (Propcid propcid) =
  _mkRequest "GET" ["/deal/proposal/",toPath propcid]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)

data DealProposalPropcidGet  
-- | @application/json@
instance Produces DealProposalPropcidGet MimeJSON


-- *** dealQueryMinerGet

-- | @GET \/deal\/query\/{miner}@
-- 
-- Query Ask
-- 
-- This endpoint returns the ask for a given CID
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
dealQueryMinerGet 
  :: Miner -- ^ "miner" -  CID
  -> EstuaryRequest DealQueryMinerGet MimeNoContent Text MimeJSON
dealQueryMinerGet (Miner miner) =
  _mkRequest "GET" ["/deal/query/",toPath miner]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)

data DealQueryMinerGet  
-- | @application/json@
instance Produces DealQueryMinerGet MimeJSON


-- *** dealStatusByProposalPropcidGet

-- | @GET \/deal\/status-by-proposal\/{propcid}@
-- 
-- Get Deal Status by PropCid
-- 
-- Get Deal Status by PropCid
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
dealStatusByProposalPropcidGet 
  :: Propcid -- ^ "propcid" -  PropCid
  -> EstuaryRequest DealStatusByProposalPropcidGet MimeNoContent Text MimeJSON
dealStatusByProposalPropcidGet (Propcid propcid) =
  _mkRequest "GET" ["/deal/status-by-proposal/",toPath propcid]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)

data DealStatusByProposalPropcidGet  
-- | @application/json@
instance Produces DealStatusByProposalPropcidGet MimeJSON


-- *** dealStatusMinerPropcidGet

-- | @GET \/deal\/status\/{miner}\/{propcid}@
-- 
-- Deal Status
-- 
-- This endpoint returns the status of a deal
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
dealStatusMinerPropcidGet 
  :: Miner -- ^ "miner" -  Miner
  -> Propcid -- ^ "propcid" -  Proposal CID
  -> EstuaryRequest DealStatusMinerPropcidGet MimeNoContent Text MimeJSON
dealStatusMinerPropcidGet (Miner miner) (Propcid propcid) =
  _mkRequest "GET" ["/deal/status/",toPath miner,"/",toPath propcid]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)

data DealStatusMinerPropcidGet  
-- | @application/json@
instance Produces DealStatusMinerPropcidGet MimeJSON


-- *** dealTransferInProgressGet

-- | @GET \/deal\/transfer\/in-progress@
-- 
-- Transfer In Progress
-- 
-- This endpoint returns the in-progress transfers
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
dealTransferInProgressGet 
  :: EstuaryRequest DealTransferInProgressGet MimeNoContent Text MimeJSON
dealTransferInProgressGet =
  _mkRequest "GET" ["/deal/transfer/in-progress"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)

data DealTransferInProgressGet  
-- | @application/json@
instance Produces DealTransferInProgressGet MimeJSON


-- *** dealTransferStatusPost

-- | @POST \/deal\/transfer\/status@
-- 
-- Transfer Status
-- 
-- This endpoint returns the status of a transfer
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
dealTransferStatusPost 
  :: (Consumes DealTransferStatusPost contentType, MimeRender contentType MainChannelIDParam)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> MainChannelIDParam -- ^ "chanid" -  Channel ID
  -> EstuaryRequest DealTransferStatusPost contentType Text MimeJSON
dealTransferStatusPost _ chanid =
  _mkRequest "POST" ["/deal/transfer/status"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)
    `setBodyParam` chanid

data DealTransferStatusPost 

-- | /Body Param/ "chanid" - Channel ID
instance HasBodyParam DealTransferStatusPost MainChannelIDParam 
-- | @application/json@
instance Produces DealTransferStatusPost MimeJSON


-- *** dealsFailuresGet

-- | @GET \/deals\/failures@
-- 
-- Get storage failures for user
-- 
-- This endpoint returns a list of storage failures for user
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
dealsFailuresGet 
  :: EstuaryRequest DealsFailuresGet MimeNoContent Text MimeJSON
dealsFailuresGet =
  _mkRequest "GET" ["/deals/failures"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)

data DealsFailuresGet  
-- | @application/json@
instance Produces DealsFailuresGet MimeJSON


-- *** dealsMakeMinerPost

-- | @POST \/deals\/make\/{miner}@
-- 
-- Make Deal
-- 
-- This endpoint makes a deal for a given content and miner
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
dealsMakeMinerPost 
  :: (Consumes DealsMakeMinerPost contentType, MimeRender contentType DealRequest2)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Miner -- ^ "miner" -  Miner
  -> DealRequest2 -- ^ "dealRequest" -  Deal Request
  -> EstuaryRequest DealsMakeMinerPost contentType Text MimeJSON
dealsMakeMinerPost _ (Miner miner) dealRequest =
  _mkRequest "POST" ["/deals/make/",toPath miner]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)
    `setBodyParam` dealRequest

data DealsMakeMinerPost 

-- | /Body Param/ "dealRequest" - Deal Request
instance HasBodyParam DealsMakeMinerPost DealRequest2 
-- | @application/json@
instance Produces DealsMakeMinerPost MimeJSON


-- *** dealsStatusDealGet

-- | @GET \/deals\/status\/{deal}@
-- 
-- Get Deal Status
-- 
-- This endpoint returns the status of a deal
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
dealsStatusDealGet 
  :: Deal -- ^ "deal" -  Deal ID
  -> EstuaryRequest DealsStatusDealGet MimeNoContent Text MimeJSON
dealsStatusDealGet (Deal deal) =
  _mkRequest "GET" ["/deals/status/",toPath deal]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)

data DealsStatusDealGet  
-- | @application/json@
instance Produces DealsStatusDealGet MimeJSON


-- *** publicDealsFailuresGet

-- | @GET \/public\/deals\/failures@
-- 
-- Get storage failures
-- 
-- This endpoint returns a list of storage failures
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
publicDealsFailuresGet 
  :: EstuaryRequest PublicDealsFailuresGet MimeNoContent Text MimeJSON
publicDealsFailuresGet =
  _mkRequest "GET" ["/public/deals/failures"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)

data PublicDealsFailuresGet  
-- | @application/json@
instance Produces PublicDealsFailuresGet MimeJSON


-- *** publicMinersStorageQueryMinerGet

-- | @GET \/public\/miners\/storage\/query\/{miner}@
-- 
-- Query Ask
-- 
-- This endpoint returns the ask for a given CID
-- 
-- AuthMethod: 'AuthApiKeyBearerAuth'
-- 
publicMinersStorageQueryMinerGet 
  :: Miner -- ^ "miner" -  CID
  -> EstuaryRequest PublicMinersStorageQueryMinerGet MimeNoContent Text MimeJSON
publicMinersStorageQueryMinerGet (Miner miner) =
  _mkRequest "GET" ["/public/miners/storage/query/",toPath miner]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerAuth)

data PublicMinersStorageQueryMinerGet  
-- | @application/json@
instance Produces PublicMinersStorageQueryMinerGet MimeJSON

