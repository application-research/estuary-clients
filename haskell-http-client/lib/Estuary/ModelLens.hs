{-
   Estuary API

   This is the API for the Estuary application.

   OpenAPI spec version: 2.0
   Estuary API API version: 0.0.0
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : Estuary.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Estuary.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import Estuary.Model
import Estuary.Core


-- * MainCollection

-- | 'mainCollectionCid' Lens
mainCollectionCidL :: Lens_' MainCollection (Maybe Text)
mainCollectionCidL f MainCollection{..} = (\mainCollectionCid -> MainCollection { mainCollectionCid, ..} ) <$> f mainCollectionCid
{-# INLINE mainCollectionCidL #-}

-- | 'mainCollectionCreatedAt' Lens
mainCollectionCreatedAtL :: Lens_' MainCollection (Maybe Text)
mainCollectionCreatedAtL f MainCollection{..} = (\mainCollectionCreatedAt -> MainCollection { mainCollectionCreatedAt, ..} ) <$> f mainCollectionCreatedAt
{-# INLINE mainCollectionCreatedAtL #-}

-- | 'mainCollectionDescription' Lens
mainCollectionDescriptionL :: Lens_' MainCollection (Maybe Text)
mainCollectionDescriptionL f MainCollection{..} = (\mainCollectionDescription -> MainCollection { mainCollectionDescription, ..} ) <$> f mainCollectionDescription
{-# INLINE mainCollectionDescriptionL #-}

-- | 'mainCollectionName' Lens
mainCollectionNameL :: Lens_' MainCollection (Maybe Text)
mainCollectionNameL f MainCollection{..} = (\mainCollectionName -> MainCollection { mainCollectionName, ..} ) <$> f mainCollectionName
{-# INLINE mainCollectionNameL #-}

-- | 'mainCollectionUserId' Lens
mainCollectionUserIdL :: Lens_' MainCollection (Maybe Int)
mainCollectionUserIdL f MainCollection{..} = (\mainCollectionUserId -> MainCollection { mainCollectionUserId, ..} ) <$> f mainCollectionUserId
{-# INLINE mainCollectionUserIdL #-}

-- | 'mainCollectionUuid' Lens
mainCollectionUuidL :: Lens_' MainCollection (Maybe Text)
mainCollectionUuidL f MainCollection{..} = (\mainCollectionUuid -> MainCollection { mainCollectionUuid, ..} ) <$> f mainCollectionUuid
{-# INLINE mainCollectionUuidL #-}



-- * MainCreateCollectionBody

-- | 'mainCreateCollectionBodyDescription' Lens
mainCreateCollectionBodyDescriptionL :: Lens_' MainCreateCollectionBody (Maybe Text)
mainCreateCollectionBodyDescriptionL f MainCreateCollectionBody{..} = (\mainCreateCollectionBodyDescription -> MainCreateCollectionBody { mainCreateCollectionBodyDescription, ..} ) <$> f mainCreateCollectionBodyDescription
{-# INLINE mainCreateCollectionBodyDescriptionL #-}

-- | 'mainCreateCollectionBodyName' Lens
mainCreateCollectionBodyNameL :: Lens_' MainCreateCollectionBody (Maybe Text)
mainCreateCollectionBodyNameL f MainCreateCollectionBody{..} = (\mainCreateCollectionBodyName -> MainCreateCollectionBody { mainCreateCollectionBodyName, ..} ) <$> f mainCreateCollectionBodyName
{-# INLINE mainCreateCollectionBodyNameL #-}



-- * MainEstimateDealBody

-- | 'mainEstimateDealBodyDurationBlks' Lens
mainEstimateDealBodyDurationBlksL :: Lens_' MainEstimateDealBody (Maybe Int)
mainEstimateDealBodyDurationBlksL f MainEstimateDealBody{..} = (\mainEstimateDealBodyDurationBlks -> MainEstimateDealBody { mainEstimateDealBodyDurationBlks, ..} ) <$> f mainEstimateDealBodyDurationBlks
{-# INLINE mainEstimateDealBodyDurationBlksL #-}

-- | 'mainEstimateDealBodyReplication' Lens
mainEstimateDealBodyReplicationL :: Lens_' MainEstimateDealBody (Maybe Int)
mainEstimateDealBodyReplicationL f MainEstimateDealBody{..} = (\mainEstimateDealBodyReplication -> MainEstimateDealBody { mainEstimateDealBodyReplication, ..} ) <$> f mainEstimateDealBodyReplication
{-# INLINE mainEstimateDealBodyReplicationL #-}

-- | 'mainEstimateDealBodySize' Lens
mainEstimateDealBodySizeL :: Lens_' MainEstimateDealBody (Maybe Int)
mainEstimateDealBodySizeL f MainEstimateDealBody{..} = (\mainEstimateDealBodySize -> MainEstimateDealBody { mainEstimateDealBodySize, ..} ) <$> f mainEstimateDealBodySize
{-# INLINE mainEstimateDealBodySizeL #-}

-- | 'mainEstimateDealBodyVerified' Lens
mainEstimateDealBodyVerifiedL :: Lens_' MainEstimateDealBody (Maybe Bool)
mainEstimateDealBodyVerifiedL f MainEstimateDealBody{..} = (\mainEstimateDealBodyVerified -> MainEstimateDealBody { mainEstimateDealBodyVerified, ..} ) <$> f mainEstimateDealBodyVerified
{-# INLINE mainEstimateDealBodyVerifiedL #-}



-- * MainGetApiKeysResp

-- | 'mainGetApiKeysRespExpiry' Lens
mainGetApiKeysRespExpiryL :: Lens_' MainGetApiKeysResp (Maybe Text)
mainGetApiKeysRespExpiryL f MainGetApiKeysResp{..} = (\mainGetApiKeysRespExpiry -> MainGetApiKeysResp { mainGetApiKeysRespExpiry, ..} ) <$> f mainGetApiKeysRespExpiry
{-# INLINE mainGetApiKeysRespExpiryL #-}

-- | 'mainGetApiKeysRespToken' Lens
mainGetApiKeysRespTokenL :: Lens_' MainGetApiKeysResp (Maybe Text)
mainGetApiKeysRespTokenL f MainGetApiKeysResp{..} = (\mainGetApiKeysRespToken -> MainGetApiKeysResp { mainGetApiKeysRespToken, ..} ) <$> f mainGetApiKeysRespToken
{-# INLINE mainGetApiKeysRespTokenL #-}



-- * MainImportDealBody

-- | 'mainImportDealBodyColuuid' Lens
mainImportDealBodyColuuidL :: Lens_' MainImportDealBody (Maybe Text)
mainImportDealBodyColuuidL f MainImportDealBody{..} = (\mainImportDealBodyColuuid -> MainImportDealBody { mainImportDealBodyColuuid, ..} ) <$> f mainImportDealBodyColuuid
{-# INLINE mainImportDealBodyColuuidL #-}

-- | 'mainImportDealBodyDealIDs' Lens
mainImportDealBodyDealIDsL :: Lens_' MainImportDealBody (Maybe [Int])
mainImportDealBodyDealIDsL f MainImportDealBody{..} = (\mainImportDealBodyDealIDs -> MainImportDealBody { mainImportDealBodyDealIDs, ..} ) <$> f mainImportDealBodyDealIDs
{-# INLINE mainImportDealBodyDealIDsL #-}

-- | 'mainImportDealBodyDir' Lens
mainImportDealBodyDirL :: Lens_' MainImportDealBody (Maybe Text)
mainImportDealBodyDirL f MainImportDealBody{..} = (\mainImportDealBodyDir -> MainImportDealBody { mainImportDealBodyDir, ..} ) <$> f mainImportDealBodyDir
{-# INLINE mainImportDealBodyDirL #-}

-- | 'mainImportDealBodyName' Lens
mainImportDealBodyNameL :: Lens_' MainImportDealBody (Maybe Text)
mainImportDealBodyNameL f MainImportDealBody{..} = (\mainImportDealBodyName -> MainImportDealBody { mainImportDealBodyName, ..} ) <$> f mainImportDealBodyName
{-# INLINE mainImportDealBodyNameL #-}



-- * MainUserStatsResponse

-- | 'mainUserStatsResponseNumPins' Lens
mainUserStatsResponseNumPinsL :: Lens_' MainUserStatsResponse (Maybe Int)
mainUserStatsResponseNumPinsL f MainUserStatsResponse{..} = (\mainUserStatsResponseNumPins -> MainUserStatsResponse { mainUserStatsResponseNumPins, ..} ) <$> f mainUserStatsResponseNumPins
{-# INLINE mainUserStatsResponseNumPinsL #-}

-- | 'mainUserStatsResponseTotalSize' Lens
mainUserStatsResponseTotalSizeL :: Lens_' MainUserStatsResponse (Maybe Int)
mainUserStatsResponseTotalSizeL f MainUserStatsResponse{..} = (\mainUserStatsResponseTotalSize -> MainUserStatsResponse { mainUserStatsResponseTotalSize, ..} ) <$> f mainUserStatsResponseTotalSize
{-# INLINE mainUserStatsResponseTotalSizeL #-}



-- * UtilContentAddIpfsBody

-- | 'utilContentAddIpfsBodyColuuid' Lens
utilContentAddIpfsBodyColuuidL :: Lens_' UtilContentAddIpfsBody (Maybe Text)
utilContentAddIpfsBodyColuuidL f UtilContentAddIpfsBody{..} = (\utilContentAddIpfsBodyColuuid -> UtilContentAddIpfsBody { utilContentAddIpfsBodyColuuid, ..} ) <$> f utilContentAddIpfsBodyColuuid
{-# INLINE utilContentAddIpfsBodyColuuidL #-}

-- | 'utilContentAddIpfsBodyDir' Lens
utilContentAddIpfsBodyDirL :: Lens_' UtilContentAddIpfsBody (Maybe Text)
utilContentAddIpfsBodyDirL f UtilContentAddIpfsBody{..} = (\utilContentAddIpfsBodyDir -> UtilContentAddIpfsBody { utilContentAddIpfsBodyDir, ..} ) <$> f utilContentAddIpfsBodyDir
{-# INLINE utilContentAddIpfsBodyDirL #-}

-- | 'utilContentAddIpfsBodyFilename' Lens
utilContentAddIpfsBodyFilenameL :: Lens_' UtilContentAddIpfsBody (Maybe Text)
utilContentAddIpfsBodyFilenameL f UtilContentAddIpfsBody{..} = (\utilContentAddIpfsBodyFilename -> UtilContentAddIpfsBody { utilContentAddIpfsBodyFilename, ..} ) <$> f utilContentAddIpfsBodyFilename
{-# INLINE utilContentAddIpfsBodyFilenameL #-}

-- | 'utilContentAddIpfsBodyPeers' Lens
utilContentAddIpfsBodyPeersL :: Lens_' UtilContentAddIpfsBody (Maybe [Text])
utilContentAddIpfsBodyPeersL f UtilContentAddIpfsBody{..} = (\utilContentAddIpfsBodyPeers -> UtilContentAddIpfsBody { utilContentAddIpfsBodyPeers, ..} ) <$> f utilContentAddIpfsBodyPeers
{-# INLINE utilContentAddIpfsBodyPeersL #-}

-- | 'utilContentAddIpfsBodyRoot' Lens
utilContentAddIpfsBodyRootL :: Lens_' UtilContentAddIpfsBody (Maybe Text)
utilContentAddIpfsBodyRootL f UtilContentAddIpfsBody{..} = (\utilContentAddIpfsBodyRoot -> UtilContentAddIpfsBody { utilContentAddIpfsBodyRoot, ..} ) <$> f utilContentAddIpfsBodyRoot
{-# INLINE utilContentAddIpfsBodyRootL #-}



-- * UtilContentAddResponse

-- | 'utilContentAddResponseCid' Lens
utilContentAddResponseCidL :: Lens_' UtilContentAddResponse (Maybe Text)
utilContentAddResponseCidL f UtilContentAddResponse{..} = (\utilContentAddResponseCid -> UtilContentAddResponse { utilContentAddResponseCid, ..} ) <$> f utilContentAddResponseCid
{-# INLINE utilContentAddResponseCidL #-}

-- | 'utilContentAddResponseEstuaryId' Lens
utilContentAddResponseEstuaryIdL :: Lens_' UtilContentAddResponse (Maybe Int)
utilContentAddResponseEstuaryIdL f UtilContentAddResponse{..} = (\utilContentAddResponseEstuaryId -> UtilContentAddResponse { utilContentAddResponseEstuaryId, ..} ) <$> f utilContentAddResponseEstuaryId
{-# INLINE utilContentAddResponseEstuaryIdL #-}

-- | 'utilContentAddResponseProviders' Lens
utilContentAddResponseProvidersL :: Lens_' UtilContentAddResponse (Maybe [Text])
utilContentAddResponseProvidersL f UtilContentAddResponse{..} = (\utilContentAddResponseProviders -> UtilContentAddResponse { utilContentAddResponseProviders, ..} ) <$> f utilContentAddResponseProviders
{-# INLINE utilContentAddResponseProvidersL #-}

-- | 'utilContentAddResponseRetrievalUrl' Lens
utilContentAddResponseRetrievalUrlL :: Lens_' UtilContentAddResponse (Maybe Text)
utilContentAddResponseRetrievalUrlL f UtilContentAddResponse{..} = (\utilContentAddResponseRetrievalUrl -> UtilContentAddResponse { utilContentAddResponseRetrievalUrl, ..} ) <$> f utilContentAddResponseRetrievalUrl
{-# INLINE utilContentAddResponseRetrievalUrlL #-}



-- * UtilHttpError

-- | 'utilHttpErrorCode' Lens
utilHttpErrorCodeL :: Lens_' UtilHttpError (Maybe Int)
utilHttpErrorCodeL f UtilHttpError{..} = (\utilHttpErrorCode -> UtilHttpError { utilHttpErrorCode, ..} ) <$> f utilHttpErrorCode
{-# INLINE utilHttpErrorCodeL #-}

-- | 'utilHttpErrorDetails' Lens
utilHttpErrorDetailsL :: Lens_' UtilHttpError (Maybe Text)
utilHttpErrorDetailsL f UtilHttpError{..} = (\utilHttpErrorDetails -> UtilHttpError { utilHttpErrorDetails, ..} ) <$> f utilHttpErrorDetails
{-# INLINE utilHttpErrorDetailsL #-}

-- | 'utilHttpErrorReason' Lens
utilHttpErrorReasonL :: Lens_' UtilHttpError (Maybe Text)
utilHttpErrorReasonL f UtilHttpError{..} = (\utilHttpErrorReason -> UtilHttpError { utilHttpErrorReason, ..} ) <$> f utilHttpErrorReason
{-# INLINE utilHttpErrorReasonL #-}


