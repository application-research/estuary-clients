/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
#pragma once

#include "CoreMinimal.h"
#include "SwaggerBaseModel.h"

namespace Swagger 
{

class SWAGGER_API SwaggerDealsApi
{
public:
	SwaggerDealsApi();
	~SwaggerDealsApi();

	void SetURL(const FString& Url);
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	class DealEstimatePostRequest;
	class DealEstimatePostResponse;
	class DealInfoDealidGetRequest;
	class DealInfoDealidGetResponse;
	class DealProposalPropcidGetRequest;
	class DealProposalPropcidGetResponse;
	class DealQueryMinerGetRequest;
	class DealQueryMinerGetResponse;
	class DealStatusByProposalPropcidGetRequest;
	class DealStatusByProposalPropcidGetResponse;
	class DealStatusMinerPropcidGetRequest;
	class DealStatusMinerPropcidGetResponse;
	class DealTransferInProgressGetRequest;
	class DealTransferInProgressGetResponse;
	class DealTransferStatusPostRequest;
	class DealTransferStatusPostResponse;
	class DealsFailuresGetRequest;
	class DealsFailuresGetResponse;
	class DealsMakeMinerPostRequest;
	class DealsMakeMinerPostResponse;
	class DealsStatusDealGetRequest;
	class DealsStatusDealGetResponse;
	class PublicDealsFailuresGetRequest;
	class PublicDealsFailuresGetResponse;
	class PublicMinersStorageQueryMinerGetRequest;
	class PublicMinersStorageQueryMinerGetResponse;
	
    DECLARE_DELEGATE_OneParam(FDealEstimatePostDelegate, const DealEstimatePostResponse&);
    DECLARE_DELEGATE_OneParam(FDealInfoDealidGetDelegate, const DealInfoDealidGetResponse&);
    DECLARE_DELEGATE_OneParam(FDealProposalPropcidGetDelegate, const DealProposalPropcidGetResponse&);
    DECLARE_DELEGATE_OneParam(FDealQueryMinerGetDelegate, const DealQueryMinerGetResponse&);
    DECLARE_DELEGATE_OneParam(FDealStatusByProposalPropcidGetDelegate, const DealStatusByProposalPropcidGetResponse&);
    DECLARE_DELEGATE_OneParam(FDealStatusMinerPropcidGetDelegate, const DealStatusMinerPropcidGetResponse&);
    DECLARE_DELEGATE_OneParam(FDealTransferInProgressGetDelegate, const DealTransferInProgressGetResponse&);
    DECLARE_DELEGATE_OneParam(FDealTransferStatusPostDelegate, const DealTransferStatusPostResponse&);
    DECLARE_DELEGATE_OneParam(FDealsFailuresGetDelegate, const DealsFailuresGetResponse&);
    DECLARE_DELEGATE_OneParam(FDealsMakeMinerPostDelegate, const DealsMakeMinerPostResponse&);
    DECLARE_DELEGATE_OneParam(FDealsStatusDealGetDelegate, const DealsStatusDealGetResponse&);
    DECLARE_DELEGATE_OneParam(FPublicDealsFailuresGetDelegate, const PublicDealsFailuresGetResponse&);
    DECLARE_DELEGATE_OneParam(FPublicMinersStorageQueryMinerGetDelegate, const PublicMinersStorageQueryMinerGetResponse&);
    
    bool DealEstimatePost(const DealEstimatePostRequest& Request, const FDealEstimatePostDelegate& Delegate = FDealEstimatePostDelegate()) const;
    bool DealInfoDealidGet(const DealInfoDealidGetRequest& Request, const FDealInfoDealidGetDelegate& Delegate = FDealInfoDealidGetDelegate()) const;
    bool DealProposalPropcidGet(const DealProposalPropcidGetRequest& Request, const FDealProposalPropcidGetDelegate& Delegate = FDealProposalPropcidGetDelegate()) const;
    bool DealQueryMinerGet(const DealQueryMinerGetRequest& Request, const FDealQueryMinerGetDelegate& Delegate = FDealQueryMinerGetDelegate()) const;
    bool DealStatusByProposalPropcidGet(const DealStatusByProposalPropcidGetRequest& Request, const FDealStatusByProposalPropcidGetDelegate& Delegate = FDealStatusByProposalPropcidGetDelegate()) const;
    bool DealStatusMinerPropcidGet(const DealStatusMinerPropcidGetRequest& Request, const FDealStatusMinerPropcidGetDelegate& Delegate = FDealStatusMinerPropcidGetDelegate()) const;
    bool DealTransferInProgressGet(const DealTransferInProgressGetRequest& Request, const FDealTransferInProgressGetDelegate& Delegate = FDealTransferInProgressGetDelegate()) const;
    bool DealTransferStatusPost(const DealTransferStatusPostRequest& Request, const FDealTransferStatusPostDelegate& Delegate = FDealTransferStatusPostDelegate()) const;
    bool DealsFailuresGet(const DealsFailuresGetRequest& Request, const FDealsFailuresGetDelegate& Delegate = FDealsFailuresGetDelegate()) const;
    bool DealsMakeMinerPost(const DealsMakeMinerPostRequest& Request, const FDealsMakeMinerPostDelegate& Delegate = FDealsMakeMinerPostDelegate()) const;
    bool DealsStatusDealGet(const DealsStatusDealGetRequest& Request, const FDealsStatusDealGetDelegate& Delegate = FDealsStatusDealGetDelegate()) const;
    bool PublicDealsFailuresGet(const PublicDealsFailuresGetRequest& Request, const FPublicDealsFailuresGetDelegate& Delegate = FPublicDealsFailuresGetDelegate()) const;
    bool PublicMinersStorageQueryMinerGet(const PublicMinersStorageQueryMinerGetRequest& Request, const FPublicMinersStorageQueryMinerGetDelegate& Delegate = FPublicMinersStorageQueryMinerGetDelegate()) const;
    
private:
    void OnDealEstimatePostResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDealEstimatePostDelegate Delegate) const;
    void OnDealInfoDealidGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDealInfoDealidGetDelegate Delegate) const;
    void OnDealProposalPropcidGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDealProposalPropcidGetDelegate Delegate) const;
    void OnDealQueryMinerGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDealQueryMinerGetDelegate Delegate) const;
    void OnDealStatusByProposalPropcidGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDealStatusByProposalPropcidGetDelegate Delegate) const;
    void OnDealStatusMinerPropcidGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDealStatusMinerPropcidGetDelegate Delegate) const;
    void OnDealTransferInProgressGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDealTransferInProgressGetDelegate Delegate) const;
    void OnDealTransferStatusPostResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDealTransferStatusPostDelegate Delegate) const;
    void OnDealsFailuresGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDealsFailuresGetDelegate Delegate) const;
    void OnDealsMakeMinerPostResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDealsMakeMinerPostDelegate Delegate) const;
    void OnDealsStatusDealGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDealsStatusDealGetDelegate Delegate) const;
    void OnPublicDealsFailuresGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicDealsFailuresGetDelegate Delegate) const;
    void OnPublicMinersStorageQueryMinerGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicMinersStorageQueryMinerGetDelegate Delegate) const;
    
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
};
	
}
