/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
#pragma once

#include "CoreMinimal.h"
#include "SwaggerBaseModel.h"

namespace Swagger 
{

class SWAGGER_API SwaggerPublicApi
{
public:
	SwaggerPublicApi();
	~SwaggerPublicApi();

	void SetURL(const FString& Url);
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	class PublicByCidCidGetRequest;
	class PublicByCidCidGetResponse;
	class PublicInfoGetRequest;
	class PublicInfoGetResponse;
	class PublicMetricsDealsOnChainGetRequest;
	class PublicMetricsDealsOnChainGetResponse;
	class PublicMinersDealsMinerGetRequest;
	class PublicMinersDealsMinerGetResponse;
	class PublicMinersFailuresMinerGetRequest;
	class PublicMinersFailuresMinerGetResponse;
	class PublicMinersGetRequest;
	class PublicMinersGetResponse;
	class PublicMinersStatsMinerGetRequest;
	class PublicMinersStatsMinerGetResponse;
	class PublicNetAddrsGetRequest;
	class PublicNetAddrsGetResponse;
	class PublicNetPeersGetRequest;
	class PublicNetPeersGetResponse;
	class PublicStatsGetRequest;
	class PublicStatsGetResponse;
	
    DECLARE_DELEGATE_OneParam(FPublicByCidCidGetDelegate, const PublicByCidCidGetResponse&);
    DECLARE_DELEGATE_OneParam(FPublicInfoGetDelegate, const PublicInfoGetResponse&);
    DECLARE_DELEGATE_OneParam(FPublicMetricsDealsOnChainGetDelegate, const PublicMetricsDealsOnChainGetResponse&);
    DECLARE_DELEGATE_OneParam(FPublicMinersDealsMinerGetDelegate, const PublicMinersDealsMinerGetResponse&);
    DECLARE_DELEGATE_OneParam(FPublicMinersFailuresMinerGetDelegate, const PublicMinersFailuresMinerGetResponse&);
    DECLARE_DELEGATE_OneParam(FPublicMinersGetDelegate, const PublicMinersGetResponse&);
    DECLARE_DELEGATE_OneParam(FPublicMinersStatsMinerGetDelegate, const PublicMinersStatsMinerGetResponse&);
    DECLARE_DELEGATE_OneParam(FPublicNetAddrsGetDelegate, const PublicNetAddrsGetResponse&);
    DECLARE_DELEGATE_OneParam(FPublicNetPeersGetDelegate, const PublicNetPeersGetResponse&);
    DECLARE_DELEGATE_OneParam(FPublicStatsGetDelegate, const PublicStatsGetResponse&);
    
    bool PublicByCidCidGet(const PublicByCidCidGetRequest& Request, const FPublicByCidCidGetDelegate& Delegate = FPublicByCidCidGetDelegate()) const;
    bool PublicInfoGet(const PublicInfoGetRequest& Request, const FPublicInfoGetDelegate& Delegate = FPublicInfoGetDelegate()) const;
    bool PublicMetricsDealsOnChainGet(const PublicMetricsDealsOnChainGetRequest& Request, const FPublicMetricsDealsOnChainGetDelegate& Delegate = FPublicMetricsDealsOnChainGetDelegate()) const;
    bool PublicMinersDealsMinerGet(const PublicMinersDealsMinerGetRequest& Request, const FPublicMinersDealsMinerGetDelegate& Delegate = FPublicMinersDealsMinerGetDelegate()) const;
    bool PublicMinersFailuresMinerGet(const PublicMinersFailuresMinerGetRequest& Request, const FPublicMinersFailuresMinerGetDelegate& Delegate = FPublicMinersFailuresMinerGetDelegate()) const;
    bool PublicMinersGet(const PublicMinersGetRequest& Request, const FPublicMinersGetDelegate& Delegate = FPublicMinersGetDelegate()) const;
    bool PublicMinersStatsMinerGet(const PublicMinersStatsMinerGetRequest& Request, const FPublicMinersStatsMinerGetDelegate& Delegate = FPublicMinersStatsMinerGetDelegate()) const;
    bool PublicNetAddrsGet(const PublicNetAddrsGetRequest& Request, const FPublicNetAddrsGetDelegate& Delegate = FPublicNetAddrsGetDelegate()) const;
    bool PublicNetPeersGet(const PublicNetPeersGetRequest& Request, const FPublicNetPeersGetDelegate& Delegate = FPublicNetPeersGetDelegate()) const;
    bool PublicStatsGet(const PublicStatsGetRequest& Request, const FPublicStatsGetDelegate& Delegate = FPublicStatsGetDelegate()) const;
    
private:
    void OnPublicByCidCidGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicByCidCidGetDelegate Delegate) const;
    void OnPublicInfoGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicInfoGetDelegate Delegate) const;
    void OnPublicMetricsDealsOnChainGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicMetricsDealsOnChainGetDelegate Delegate) const;
    void OnPublicMinersDealsMinerGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicMinersDealsMinerGetDelegate Delegate) const;
    void OnPublicMinersFailuresMinerGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicMinersFailuresMinerGetDelegate Delegate) const;
    void OnPublicMinersGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicMinersGetDelegate Delegate) const;
    void OnPublicMinersStatsMinerGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicMinersStatsMinerGetDelegate Delegate) const;
    void OnPublicNetAddrsGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicNetAddrsGetDelegate Delegate) const;
    void OnPublicNetPeersGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicNetPeersGetDelegate Delegate) const;
    void OnPublicStatsGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPublicStatsGetDelegate Delegate) const;
    
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
};
	
}
