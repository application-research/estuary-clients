/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
#pragma once

#include "CoreMinimal.h"
#include "SwaggerBaseModel.h"

namespace Swagger 
{

class SWAGGER_API SwaggerCollectionsApi
{
public:
	SwaggerCollectionsApi();
	~SwaggerCollectionsApi();

	void SetURL(const FString& Url);
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	class CollectionsColuuidCommitPostRequest;
	class CollectionsColuuidCommitPostResponse;
	class CollectionsColuuidDeleteRequest;
	class CollectionsColuuidDeleteResponse;
	class CollectionsColuuidGetRequest;
	class CollectionsColuuidGetResponse;
	class CollectionsColuuidPostRequest;
	class CollectionsColuuidPostResponse;
	class CollectionsFsAddPostRequest;
	class CollectionsFsAddPostResponse;
	class CollectionsGetRequest;
	class CollectionsGetResponse;
	class CollectionsPostRequest;
	class CollectionsPostResponse;
	
    DECLARE_DELEGATE_OneParam(FCollectionsColuuidCommitPostDelegate, const CollectionsColuuidCommitPostResponse&);
    DECLARE_DELEGATE_OneParam(FCollectionsColuuidDeleteDelegate, const CollectionsColuuidDeleteResponse&);
    DECLARE_DELEGATE_OneParam(FCollectionsColuuidGetDelegate, const CollectionsColuuidGetResponse&);
    DECLARE_DELEGATE_OneParam(FCollectionsColuuidPostDelegate, const CollectionsColuuidPostResponse&);
    DECLARE_DELEGATE_OneParam(FCollectionsFsAddPostDelegate, const CollectionsFsAddPostResponse&);
    DECLARE_DELEGATE_OneParam(FCollectionsGetDelegate, const CollectionsGetResponse&);
    DECLARE_DELEGATE_OneParam(FCollectionsPostDelegate, const CollectionsPostResponse&);
    
    bool CollectionsColuuidCommitPost(const CollectionsColuuidCommitPostRequest& Request, const FCollectionsColuuidCommitPostDelegate& Delegate = FCollectionsColuuidCommitPostDelegate()) const;
    bool CollectionsColuuidDelete(const CollectionsColuuidDeleteRequest& Request, const FCollectionsColuuidDeleteDelegate& Delegate = FCollectionsColuuidDeleteDelegate()) const;
    bool CollectionsColuuidGet(const CollectionsColuuidGetRequest& Request, const FCollectionsColuuidGetDelegate& Delegate = FCollectionsColuuidGetDelegate()) const;
    bool CollectionsColuuidPost(const CollectionsColuuidPostRequest& Request, const FCollectionsColuuidPostDelegate& Delegate = FCollectionsColuuidPostDelegate()) const;
    bool CollectionsFsAddPost(const CollectionsFsAddPostRequest& Request, const FCollectionsFsAddPostDelegate& Delegate = FCollectionsFsAddPostDelegate()) const;
    bool CollectionsGet(const CollectionsGetRequest& Request, const FCollectionsGetDelegate& Delegate = FCollectionsGetDelegate()) const;
    bool CollectionsPost(const CollectionsPostRequest& Request, const FCollectionsPostDelegate& Delegate = FCollectionsPostDelegate()) const;
    
private:
    void OnCollectionsColuuidCommitPostResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCollectionsColuuidCommitPostDelegate Delegate) const;
    void OnCollectionsColuuidDeleteResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCollectionsColuuidDeleteDelegate Delegate) const;
    void OnCollectionsColuuidGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCollectionsColuuidGetDelegate Delegate) const;
    void OnCollectionsColuuidPostResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCollectionsColuuidPostDelegate Delegate) const;
    void OnCollectionsFsAddPostResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCollectionsFsAddPostDelegate Delegate) const;
    void OnCollectionsGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCollectionsGetDelegate Delegate) const;
    void OnCollectionsPostResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCollectionsPostDelegate Delegate) const;
    
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
};
	
}
