/**
 * Estuary API
 * This is the API for the Estuary application.
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
#pragma once

#include "CoreMinimal.h"
#include "SwaggerBaseModel.h"

namespace Swagger 
{

class SWAGGER_API SwaggerPinningApi
{
public:
	SwaggerPinningApi();
	~SwaggerPinningApi();

	void SetURL(const FString& Url);
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	class PinningPinsGetRequest;
	class PinningPinsGetResponse;
	class PinningPinsPinidDeleteRequest;
	class PinningPinsPinidDeleteResponse;
	class PinningPinsPinidGetRequest;
	class PinningPinsPinidGetResponse;
	class PinningPinsPinidPostRequest;
	class PinningPinsPinidPostResponse;
	class PinningPinsPostRequest;
	class PinningPinsPostResponse;
	
    DECLARE_DELEGATE_OneParam(FPinningPinsGetDelegate, const PinningPinsGetResponse&);
    DECLARE_DELEGATE_OneParam(FPinningPinsPinidDeleteDelegate, const PinningPinsPinidDeleteResponse&);
    DECLARE_DELEGATE_OneParam(FPinningPinsPinidGetDelegate, const PinningPinsPinidGetResponse&);
    DECLARE_DELEGATE_OneParam(FPinningPinsPinidPostDelegate, const PinningPinsPinidPostResponse&);
    DECLARE_DELEGATE_OneParam(FPinningPinsPostDelegate, const PinningPinsPostResponse&);
    
    bool PinningPinsGet(const PinningPinsGetRequest& Request, const FPinningPinsGetDelegate& Delegate = FPinningPinsGetDelegate()) const;
    bool PinningPinsPinidDelete(const PinningPinsPinidDeleteRequest& Request, const FPinningPinsPinidDeleteDelegate& Delegate = FPinningPinsPinidDeleteDelegate()) const;
    bool PinningPinsPinidGet(const PinningPinsPinidGetRequest& Request, const FPinningPinsPinidGetDelegate& Delegate = FPinningPinsPinidGetDelegate()) const;
    bool PinningPinsPinidPost(const PinningPinsPinidPostRequest& Request, const FPinningPinsPinidPostDelegate& Delegate = FPinningPinsPinidPostDelegate()) const;
    bool PinningPinsPost(const PinningPinsPostRequest& Request, const FPinningPinsPostDelegate& Delegate = FPinningPinsPostDelegate()) const;
    
private:
    void OnPinningPinsGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPinningPinsGetDelegate Delegate) const;
    void OnPinningPinsPinidDeleteResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPinningPinsPinidDeleteDelegate Delegate) const;
    void OnPinningPinsPinidGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPinningPinsPinidGetDelegate Delegate) const;
    void OnPinningPinsPinidPostResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPinningPinsPinidPostDelegate Delegate) const;
    void OnPinningPinsPostResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPinningPinsPostDelegate Delegate) const;
    
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
};
	
}
