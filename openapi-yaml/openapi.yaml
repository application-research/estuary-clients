openapi: 3.0.1
info:
  title: Estuary API
  description: This is the API for the Estuary application.
  termsOfService: http://estuary.tech
  contact:
    name: API Support
    url: https://docs.estuary.tech/feedback
  license:
    name: Apache 2.0 Apache-2.0 OR MIT
    url: https://github.com/application-research/estuary/blob/master/LICENSE.md
  version: 0.0.0
servers:
- url: //api.estuary.tech/
security:
- bearerAuth: []
paths:
  /admin/autoretrieve/init:
    post:
      tags:
      - autoretrieve
      summary: Register autoretrieve server
      description: This endpoint registers a new autoretrieve server
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/autoretrieve_init_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /admin/autoretrieve/list:
    get:
      tags:
      - autoretrieve
      summary: List autoretrieve servers
      description: This endpoint lists all registered autoretrieve servers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /admin/peering/peers:
    get:
      tags:
      - admin
      - peering
      - peers
      summary: List all Peering peers
      description: This endpoint can be used to list all peers on Peering Service
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
    post:
      tags:
      - admin
      - peering
      - peers
      summary: Add peers on Peering Service
      description: This endpoint can be used to add a Peer from the Peering Service
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
    delete:
      tags:
      - admin
      - peering
      - peers
      summary: Remove peers on Peering Service
      description: This endpoint can be used to remove a Peer from the Peering Service
      requestBody:
        description: Peer ids
        content:
          '*/*':
            schema:
              type: array
              items:
                type: boolean
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: peerIds
  /admin/peering/start:
    post:
      tags:
      - admin
      - peering
      - peers
      summary: Start Peering
      description: This endpoint can be used to start the Peering Service
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /admin/peering/status:
    get:
      tags:
      - admin
      - peering
      - peers
      summary: Check Peering Status
      description: This endpoint can be used to check the Peering status
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /admin/peering/stop:
    post:
      tags:
      - admin
      - peering
      - peers
      summary: Stop Peering
      description: This endpoint can be used to stop the Peering Service
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /admin/system/config:
    get:
      tags:
      - admin
      summary: Get systems(estuary/shuttle) config
      description: This endpoint is used to get system configs.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /admin/users:
    get:
      tags:
      - admin
      summary: Get all users
      description: This endpoint is used to get all users.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /autoretrieve/heartbeat:
    post:
      tags:
      - autoretrieve
      summary: Marks autoretrieve server as up
      description: This endpoint updates the lastConnection field for autoretrieve
      parameters:
      - name: token
        in: header
        description: Autoretrieve's auth token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /collections/:
    get:
      tags:
      - collections
      summary: List all collections
      description: "This endpoint is used to list all collections. Whenever a user\
        \ logs on estuary, it will list all collections that the user has access to.\
        \ This endpoint provides a way to list all collections to the user."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/collections.Collection'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
    post:
      tags:
      - collections
      summary: Create a new collection
      description: This endpoint is used to create a new collection. A collection
        is a representaion of a group of objects added on the estuary. This endpoint
        can be used to create a new collection.
      requestBody:
        description: Collection name and description
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/main.createCollectionBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collections.Collection'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: body
  /collections/fs/add:
    post:
      tags:
      - collections
      summary: Add a file to a collection
      description: This endpoint adds a file to a collection
      parameters:
      - name: coluuid
        in: query
        description: Collection ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: content
        in: query
        description: Content
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: path
        in: query
        description: Path to file
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /collections/{coluuid}:
    get:
      tags:
      - collections
      summary: Get contents in a collection
      description: This endpoint is used to get contents in a collection. If no colpath
        query param is passed
      parameters:
      - name: coluuid
        in: path
        description: coluuid
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dir
        in: query
        description: Directory
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
    post:
      tags:
      - collections
      summary: Add contents to a collection
      description: This endpoint adds already-pinned contents (that have ContentIDs)
        to a collection.
      parameters:
      - name: coluuid
        in: path
        description: Collection UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Content IDs to add to collection
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: contentIDs
    delete:
      tags:
      - collections
      summary: Deletes a collection
      description: This endpoint is used to delete an existing collection.
      parameters:
      - name: coluuid
        in: path
        description: Collection ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /collections/{coluuid}/commit:
    post:
      tags:
      - collections
      summary: Produce a CID of the collection contents
      description: "This endpoint is used to save the contents in a collection, producing\
        \ a top-level CID that references all the current CIDs in the collection."
      parameters:
      - name: coluuid
        in: path
        description: coluuid
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /collections/{coluuid}/contents:
    delete:
      tags:
      - collections
      summary: Deletes a content from a collection
      description: "This endpoint is used to delete an existing content from an existing\
        \ collection. If two or more files with the same contentid exist in the collection,\
        \ delete the one in the specified path"
      parameters:
      - name: coluuid
        in: path
        description: Collection ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contentid
        in: path
        description: Content ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Variable to use when filtering for files (must be either 'path'
          or 'content_id')
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/main.deleteContentFromCollectionBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: body
  /content/add:
    post:
      tags:
      - content
      summary: Add new content
      description: This endpoint is used to upload new content.
      parameters:
      - name: coluuid
        in: query
        description: Collection UUID
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: replication
        in: query
        description: Replication value
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: ignore-dupes
        in: query
        description: Ignore Dupes true/false
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lazy-provide
        in: query
        description: Lazy Provide true/false
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dir
        in: query
        description: Directory
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/content_add_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ContentAddResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/add-car:
    post:
      tags:
      - content
      summary: Add Car object
      description: This endpoint is used to add a car object to the network. The object
        can be a file or a directory.
      parameters:
      - name: ignore-dupes
        in: query
        description: Ignore Dupes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filename
        in: query
        description: Filename
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Car
        content:
          '*/*':
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ContentAddResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: body
  /content/add-ipfs:
    post:
      tags:
      - content
      summary: Add IPFS object
      description: This endpoint is used to add an IPFS object to the network. The
        object can be a file or a directory.
      parameters:
      - name: ignore-dupes
        in: query
        description: Ignore Dupes
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: IPFS Body
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/util.ContentAddIpfsBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: body
  /content/aggregated/{content}:
    get:
      tags:
      - content
      summary: Get aggregated content stats
      description: This endpoint returns aggregated content stats
      parameters:
      - name: content
        in: path
        description: Content ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/all-deals:
    get:
      tags:
      - content
      summary: Get all deals for a user
      description: This endpoint is used to get all deals for a user
      parameters:
      - name: begin
        in: query
        description: Begin
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: duration
        in: query
        description: Duration
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: all
        in: query
        description: All
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/bw-usage/{content}:
    get:
      tags:
      - content
      summary: Get content bandwidth
      description: This endpoint returns content bandwidth
      parameters:
      - name: content
        in: path
        description: Content ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/create:
    post:
      tags:
      - content
      summary: Add a new content
      description: This endpoint adds a new content
      parameters:
      - name: ignore-dupes
        in: query
        description: Ignore Dupes
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Content
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/util.ContentCreateBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: req
  /content/deals:
    get:
      tags:
      - content
      summary: Content with deals
      description: This endpoint lists all content with deals
      parameters:
      - name: limit
        in: query
        description: Limit
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Offset
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/ensure-replication/{datacid}:
    get:
      tags:
      - content
      summary: Ensure Replication
      description: This endpoint ensures that the content is replicated to the specified
        number of providers
      parameters:
      - name: datacid
        in: path
        description: Data CID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/failures/{content}:
    get:
      tags:
      - content
      summary: List all failures for a content
      description: This endpoint returns all failures for a content
      parameters:
      - name: content
        in: path
        description: Content ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/importdeal:
    post:
      tags:
      - content
      summary: Import a deal
      description: This endpoint imports a deal into the shuttle.
      requestBody:
        description: Import a deal
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/main.importDealBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: body
  /content/list:
    get:
      tags:
      - content
      summary: List all pinned content
      description: This endpoint lists all content
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/read/{cont}:
    get:
      tags:
      - content
      summary: Read content
      description: This endpoint reads content from the blockstore
      parameters:
      - name: cont
        in: path
        description: CID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/staging-zones:
    get:
      tags:
      - content
      summary: Get staging zone for user
      description: This endpoint is used to get staging zone for user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/stats:
    get:
      tags:
      - content
      summary: Get content statistics
      description: This endpoint is used to get content statistics. Every content
        stored in the network (estuary) is tracked by a unique ID which can be used
        to get information about the content. This endpoint will allow the consumer
        to get the collected stats of a conten
      parameters:
      - name: limit
        in: query
        description: limit
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/status/{id}:
    get:
      tags:
      - content
      summary: Content Status
      description: This endpoint returns the status of a content
      parameters:
      - name: id
        in: path
        description: Content ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /content/{id}:
    get:
      tags:
      - content
      summary: Content
      description: This endpoint returns a content by its ID
      parameters:
      - name: id
        in: path
        description: Content ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /deal/estimate:
    post:
      tags:
      - deals
      summary: Estimate the cost of a deal
      description: This endpoint estimates the cost of a deal
      requestBody:
        description: "The size of the deal in bytes, the replication factor, and the\
          \ duration of the deal in blocks"
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/main.estimateDealBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: body
  /deal/info/{dealid}:
    get:
      tags:
      - deals
      summary: Get Deal Info
      description: This endpoint returns the deal info for a deal
      parameters:
      - name: dealid
        in: path
        description: Deal ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /deal/proposal/{propcid}:
    get:
      tags:
      - deals
      summary: Get Proposal
      description: This endpoint returns the proposal for a deal
      parameters:
      - name: propcid
        in: path
        description: Proposal CID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /deal/query/{miner}:
    get:
      tags:
      - deals
      summary: Query Ask
      description: This endpoint returns the ask for a given CID
      parameters:
      - name: miner
        in: path
        description: CID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /deal/status-by-proposal/{propcid}:
    get:
      tags:
      - deals
      summary: Get Deal Status by PropCid
      description: Get Deal Status by PropCid
      parameters:
      - name: propcid
        in: path
        description: PropCid
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /deal/status/{miner}/{propcid}:
    get:
      tags:
      - deals
      summary: Deal Status
      description: This endpoint returns the status of a deal
      parameters:
      - name: miner
        in: path
        description: Miner
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propcid
        in: path
        description: Proposal CID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /deal/transfer/in-progress:
    get:
      tags:
      - deals
      summary: Transfer In Progress
      description: This endpoint returns the in-progress transfers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /deal/transfer/status:
    post:
      tags:
      - deals
      summary: Transfer Status
      description: This endpoint returns the status of a transfer
      requestBody:
        description: Channel ID
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/main.ChannelIDParam'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: chanid
  /deals/failures:
    get:
      tags:
      - deals
      summary: Get storage failures for user
      description: This endpoint returns a list of storage failures for user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /deals/make/{miner}:
    post:
      tags:
      - deals
      summary: Make Deal
      description: This endpoint makes a deal for a given content and miner
      parameters:
      - name: miner
        in: path
        description: Miner
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Deal Request
        content:
          '*/*':
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: dealRequest
  /deals/status/{deal}:
    get:
      tags:
      - deals
      summary: Get Deal Status
      description: This endpoint returns the status of a deal
      parameters:
      - name: deal
        in: path
        description: Deal ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /get/{cid}:
    get:
      tags:
      - public
      summary: Get Full Content by Cid
      description: This endpoint returns the content associated with a CID
      parameters:
      - name: cid
        in: path
        description: Cid
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "307":
          description: Temporary Redirect
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /net/addrs:
    get:
      tags:
      - net
      summary: Net Addrs
      description: This endpoint is used to get net addrs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /pinning/pins:
    get:
      tags:
      - pinning
      summary: List all pin status objects
      description: This endpoint lists all pin status objects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.IpfsListPinStatusResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
    post:
      tags:
      - pinning
      summary: Add and pin object
      description: This endpoint adds a pin to the IPFS daemon.
      requestBody:
        description: "Pin Body {cid:cid, name:name}"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.IpfsPin'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.IpfsPinStatusResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: pin
  /pinning/pins/{pinid}:
    get:
      tags:
      - pinning
      summary: Get a pin status object
      description: This endpoint returns a pin status object.
      parameters:
      - name: pinid
        in: path
        description: cid
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.IpfsPinStatusResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
    post:
      tags:
      - pinning
      summary: Replace a pinned object
      description: This endpoint replaces a pinned object.
      parameters:
      - name: pinid
        in: path
        description: Pin ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Meta information of new pin
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.IpfsPinStatusResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
      x-codegen-request-body-name: meta
    delete:
      tags:
      - pinning
      summary: Delete a pinned object
      description: This endpoint deletes a pinned object.
      parameters:
      - name: pinid
        in: path
        description: Pin ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "202":
          description: ""
          content: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /public/by-cid/{cid}:
    get:
      tags:
      - public
      summary: Get Content by Cid
      description: This endpoint returns the content record associated with a CID
      parameters:
      - name: cid
        in: path
        description: Cid
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /public/deals/failures:
    get:
      tags:
      - deals
      summary: Get storage failures
      description: This endpoint returns a list of storage failures
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /public/info:
    get:
      tags:
      - public
      summary: Get public node info
      description: This endpoint returns information about the node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /public/metrics/deals-on-chain:
    get:
      tags:
      - public
      - metrics
      summary: Get deal metrics
      description: This endpoint is used to get deal metrics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /public/miners:
    get:
      tags:
      - public
      - net
      summary: Get all miners
      description: This endpoint returns all miners
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /public/miners/deals/{miner}:
    get:
      tags:
      - public
      - miner
      summary: Get all miners deals
      description: This endpoint returns all miners deals
      parameters:
      - name: miner
        in: path
        description: Filter by miner
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ignore-failed
        in: query
        description: Ignore Failed
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /public/miners/failures/{miner}:
    get:
      tags:
      - public
      - net
      summary: Get all miners
      description: This endpoint returns all miners
      parameters:
      - name: miner
        in: path
        description: Filter by miner
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /public/miners/stats/{miner}:
    get:
      tags:
      - public
      - miner
      summary: Get miner stats
      description: This endpoint returns miner stats
      parameters:
      - name: miner
        in: path
        description: Filter by miner
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /public/miners/storage/query/{miner}:
    get:
      tags:
      - deals
      summary: Query Ask
      description: This endpoint returns the ask for a given CID
      parameters:
      - name: miner
        in: path
        description: CID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /public/net/addrs:
    get:
      tags:
      - public
      - net
      summary: Net Addrs
      description: This endpoint is used to get net addrs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /public/net/peers:
    get:
      tags:
      - public
      - net
      summary: Net Peers
      description: This endpoint is used to get net peers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /public/stats:
    get:
      tags:
      - public
      summary: Public stats
      description: This endpoint is used to get public stats.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /user/api-keys:
    get:
      tags:
      - User
      summary: Get API keys for a user
      description: "This endpoint is used to get API keys for a user. In estuary,\
        \ each user can be given multiple API keys (tokens). This endpoint can be\
        \ used to retrieve all available API keys for a given user."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/main.getApiKeysResp'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
    post:
      tags:
      - User
      summary: Create API keys for a user
      description: "This endpoint is used to create API keys for a user. In estuary,\
        \ each user is given an API key to access all features."
      parameters:
      - name: expiry
        in: query
        description: "Expiration - Expiration - Valid time units are ns, us (or µ\
          s),  ms,  s,  m,  h.  for  example  300h"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: perms
        in: query
        description: Permissions -- currently unused
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/main.getApiKeysResp'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /user/api-keys/{key_or_hash}:
    delete:
      tags:
      - User
      summary: Revoke a User API Key.
      description: "This endpoint is used to revoke a user API key. In estuary, every\
        \ user is assigned with an API key, this API key is generated and issued for\
        \ each user and is primarily used to access all estuary features. This endpoint\
        \ can be used to revoke the API key that's assigned to the user. Revoked API\
        \ keys are completely deleted and are not recoverable."
      parameters:
      - name: key_or_hash
        in: path
        description: Key or Hash
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /user/export:
    get:
      tags:
      - User
      summary: Export user data
      description: This endpoint is used to get API keys for a user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
  /user/stats:
    get:
      tags:
      - User
      summary: Get stats for the current user
      description: This endpoint is used to geet stats for the current user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.HttpError'
components:
  schemas:
    collections.Collection:
      type: object
      properties:
        cid:
          type: string
        createdAt:
          type: string
        description:
          type: string
        name:
          type: string
        userId:
          type: integer
        uuid:
          type: string
    main.ChannelIDParam:
      type: object
      properties:
        id:
          type: integer
        initiator:
          type: string
        responder:
          type: string
    main.createCollectionBody:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    main.deleteContentFromCollectionBody:
      type: object
      properties:
        by:
          type: string
        value:
          type: string
    main.estimateDealBody:
      type: object
      properties:
        durationBlks:
          type: integer
        replication:
          type: integer
        size:
          type: integer
        verified:
          type: boolean
    main.getApiKeysResp:
      type: object
      properties:
        expiry:
          type: string
        label:
          type: string
        token:
          type: string
        tokenHash:
          type: string
    main.importDealBody:
      type: object
      properties:
        coluuid:
          type: string
        dealIDs:
          type: array
          items:
            type: integer
        dir:
          type: string
        name:
          type: string
    types.IpfsListPinStatusResponse:
      type: object
      properties:
        count:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/types.IpfsPinStatusResponse'
    types.IpfsPin:
      type: object
      properties:
        cid:
          type: string
        meta:
          type: object
          properties: {}
        name:
          type: string
        origins:
          type: array
          items:
            type: string
    types.IpfsPinStatusResponse:
      type: object
      properties:
        created:
          type: string
        delegates:
          type: array
          items:
            type: string
        info:
          type: object
          properties: {}
        pin:
          $ref: '#/components/schemas/types.IpfsPin'
        requestid:
          type: string
        status:
          type: string
    util.ContentAddIpfsBody:
      type: object
      properties:
        coluuid:
          type: string
        dir:
          type: string
        filename:
          type: string
        peers:
          type: array
          items:
            type: string
        root:
          type: string
    util.ContentAddResponse:
      type: object
      properties:
        cid:
          type: string
        estuaryId:
          type: integer
        providers:
          type: array
          items:
            type: string
        retrieval_url:
          type: string
    util.ContentCreateBody:
      type: object
      properties:
        coluuid:
          type: string
        dir:
          type: string
        location:
          type: string
        name:
          type: string
        root:
          type: string
        type:
          type: integer
    util.HttpError:
      type: object
      properties:
        code:
          type: integer
        details:
          type: string
        reason:
          type: string
    autoretrieve_init_body:
      required:
      - addresses
      - pubKey
      type: object
      properties:
        addresses:
          type: string
          description: Autoretrieve's comma-separated list of addresses
        pubKey:
          type: string
          description: Autoretrieve's public key
    content_add_body:
      required:
      - data
      type: object
      properties:
        data:
          type: string
          description: File to upload
          format: binary
        filename:
          type: string
          description: Filenam to use for upload
  securitySchemes:
    bearerAuth:
      type: apiKey
      name: Authorization
      in: header
x-original-swagger-version: "2.0"
