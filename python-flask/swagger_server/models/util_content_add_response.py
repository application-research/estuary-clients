# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UtilContentAddResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, cid: str=None, estuary_id: int=None, providers: List[str]=None, retrieval_url: str=None):  # noqa: E501
        """UtilContentAddResponse - a model defined in Swagger

        :param cid: The cid of this UtilContentAddResponse.  # noqa: E501
        :type cid: str
        :param estuary_id: The estuary_id of this UtilContentAddResponse.  # noqa: E501
        :type estuary_id: int
        :param providers: The providers of this UtilContentAddResponse.  # noqa: E501
        :type providers: List[str]
        :param retrieval_url: The retrieval_url of this UtilContentAddResponse.  # noqa: E501
        :type retrieval_url: str
        """
        self.swagger_types = {
            'cid': str,
            'estuary_id': int,
            'providers': List[str],
            'retrieval_url': str
        }

        self.attribute_map = {
            'cid': 'cid',
            'estuary_id': 'estuaryId',
            'providers': 'providers',
            'retrieval_url': 'retrieval_url'
        }

        self._cid = cid
        self._estuary_id = estuary_id
        self._providers = providers
        self._retrieval_url = retrieval_url

    @classmethod
    def from_dict(cls, dikt) -> 'UtilContentAddResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The util.ContentAddResponse of this UtilContentAddResponse.  # noqa: E501
        :rtype: UtilContentAddResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cid(self) -> str:
        """Gets the cid of this UtilContentAddResponse.


        :return: The cid of this UtilContentAddResponse.
        :rtype: str
        """
        return self._cid

    @cid.setter
    def cid(self, cid: str):
        """Sets the cid of this UtilContentAddResponse.


        :param cid: The cid of this UtilContentAddResponse.
        :type cid: str
        """

        self._cid = cid

    @property
    def estuary_id(self) -> int:
        """Gets the estuary_id of this UtilContentAddResponse.


        :return: The estuary_id of this UtilContentAddResponse.
        :rtype: int
        """
        return self._estuary_id

    @estuary_id.setter
    def estuary_id(self, estuary_id: int):
        """Sets the estuary_id of this UtilContentAddResponse.


        :param estuary_id: The estuary_id of this UtilContentAddResponse.
        :type estuary_id: int
        """

        self._estuary_id = estuary_id

    @property
    def providers(self) -> List[str]:
        """Gets the providers of this UtilContentAddResponse.


        :return: The providers of this UtilContentAddResponse.
        :rtype: List[str]
        """
        return self._providers

    @providers.setter
    def providers(self, providers: List[str]):
        """Sets the providers of this UtilContentAddResponse.


        :param providers: The providers of this UtilContentAddResponse.
        :type providers: List[str]
        """

        self._providers = providers

    @property
    def retrieval_url(self) -> str:
        """Gets the retrieval_url of this UtilContentAddResponse.


        :return: The retrieval_url of this UtilContentAddResponse.
        :rtype: str
        """
        return self._retrieval_url

    @retrieval_url.setter
    def retrieval_url(self, retrieval_url: str):
        """Sets the retrieval_url of this UtilContentAddResponse.


        :param retrieval_url: The retrieval_url of this UtilContentAddResponse.
        :type retrieval_url: str
        """

        self._retrieval_url = retrieval_url
