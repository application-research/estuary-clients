# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MainUserStatsResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, num_pins: int=None, total_size: int=None):  # noqa: E501
        """MainUserStatsResponse - a model defined in Swagger

        :param num_pins: The num_pins of this MainUserStatsResponse.  # noqa: E501
        :type num_pins: int
        :param total_size: The total_size of this MainUserStatsResponse.  # noqa: E501
        :type total_size: int
        """
        self.swagger_types = {
            'num_pins': int,
            'total_size': int
        }

        self.attribute_map = {
            'num_pins': 'numPins',
            'total_size': 'totalSize'
        }

        self._num_pins = num_pins
        self._total_size = total_size

    @classmethod
    def from_dict(cls, dikt) -> 'MainUserStatsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The main.userStatsResponse of this MainUserStatsResponse.  # noqa: E501
        :rtype: MainUserStatsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def num_pins(self) -> int:
        """Gets the num_pins of this MainUserStatsResponse.


        :return: The num_pins of this MainUserStatsResponse.
        :rtype: int
        """
        return self._num_pins

    @num_pins.setter
    def num_pins(self, num_pins: int):
        """Sets the num_pins of this MainUserStatsResponse.


        :param num_pins: The num_pins of this MainUserStatsResponse.
        :type num_pins: int
        """

        self._num_pins = num_pins

    @property
    def total_size(self) -> int:
        """Gets the total_size of this MainUserStatsResponse.


        :return: The total_size of this MainUserStatsResponse.
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size: int):
        """Sets the total_size of this MainUserStatsResponse.


        :param total_size: The total_size of this MainUserStatsResponse.
        :type total_size: int
        """

        self._total_size = total_size
