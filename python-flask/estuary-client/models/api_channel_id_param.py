# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from estuary-client.models.base_model_ import Model
from estuary-client import util


class ApiChannelIDParam(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, initiator: str=None, responder: str=None):  # noqa: E501
        """ApiChannelIDParam - a model defined in Swagger

        :param id: The id of this ApiChannelIDParam.  # noqa: E501
        :type id: int
        :param initiator: The initiator of this ApiChannelIDParam.  # noqa: E501
        :type initiator: str
        :param responder: The responder of this ApiChannelIDParam.  # noqa: E501
        :type responder: str
        """
        self.swagger_types = {
            'id': int,
            'initiator': str,
            'responder': str
        }

        self.attribute_map = {
            'id': 'id',
            'initiator': 'initiator',
            'responder': 'responder'
        }
        self._id = id
        self._initiator = initiator
        self._responder = responder

    @classmethod
    def from_dict(cls, dikt) -> 'ApiChannelIDParam':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The api.ChannelIDParam of this ApiChannelIDParam.  # noqa: E501
        :rtype: ApiChannelIDParam
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this ApiChannelIDParam.


        :return: The id of this ApiChannelIDParam.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this ApiChannelIDParam.


        :param id: The id of this ApiChannelIDParam.
        :type id: int
        """

        self._id = id

    @property
    def initiator(self) -> str:
        """Gets the initiator of this ApiChannelIDParam.


        :return: The initiator of this ApiChannelIDParam.
        :rtype: str
        """
        return self._initiator

    @initiator.setter
    def initiator(self, initiator: str):
        """Sets the initiator of this ApiChannelIDParam.


        :param initiator: The initiator of this ApiChannelIDParam.
        :type initiator: str
        """

        self._initiator = initiator

    @property
    def responder(self) -> str:
        """Gets the responder of this ApiChannelIDParam.


        :return: The responder of this ApiChannelIDParam.
        :rtype: str
        """
        return self._responder

    @responder.setter
    def responder(self, responder: str):
        """Sets the responder of this ApiChannelIDParam.


        :param responder: The responder of this ApiChannelIDParam.
        :type responder: str
        """

        self._responder = responder
