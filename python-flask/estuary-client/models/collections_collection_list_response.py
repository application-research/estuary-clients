# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from estuary-client.models.base_model_ import Model
from estuary-client.models.collections_cid_type import CollectionsCidType  # noqa: F401,E501
from estuary-client.models.util_db_cid import UtilDbCID  # noqa: F401,E501
from estuary-client import util


class CollectionsCollectionListResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cid: UtilDbCID=None, coluuid: str=None, cont_id: int=None, dir: str=None, name: str=None, size: int=None, type: CollectionsCidType=None, updated_at: str=None):  # noqa: E501
        """CollectionsCollectionListResponse - a model defined in Swagger

        :param cid: The cid of this CollectionsCollectionListResponse.  # noqa: E501
        :type cid: UtilDbCID
        :param coluuid: The coluuid of this CollectionsCollectionListResponse.  # noqa: E501
        :type coluuid: str
        :param cont_id: The cont_id of this CollectionsCollectionListResponse.  # noqa: E501
        :type cont_id: int
        :param dir: The dir of this CollectionsCollectionListResponse.  # noqa: E501
        :type dir: str
        :param name: The name of this CollectionsCollectionListResponse.  # noqa: E501
        :type name: str
        :param size: The size of this CollectionsCollectionListResponse.  # noqa: E501
        :type size: int
        :param type: The type of this CollectionsCollectionListResponse.  # noqa: E501
        :type type: CollectionsCidType
        :param updated_at: The updated_at of this CollectionsCollectionListResponse.  # noqa: E501
        :type updated_at: str
        """
        self.swagger_types = {
            'cid': UtilDbCID,
            'coluuid': str,
            'cont_id': int,
            'dir': str,
            'name': str,
            'size': int,
            'type': CollectionsCidType,
            'updated_at': str
        }

        self.attribute_map = {
            'cid': 'cid',
            'coluuid': 'coluuid',
            'cont_id': 'contId',
            'dir': 'dir',
            'name': 'name',
            'size': 'size',
            'type': 'type',
            'updated_at': 'updatedAt'
        }
        self._cid = cid
        self._coluuid = coluuid
        self._cont_id = cont_id
        self._dir = dir
        self._name = name
        self._size = size
        self._type = type
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'CollectionsCollectionListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The collections.CollectionListResponse of this CollectionsCollectionListResponse.  # noqa: E501
        :rtype: CollectionsCollectionListResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cid(self) -> UtilDbCID:
        """Gets the cid of this CollectionsCollectionListResponse.


        :return: The cid of this CollectionsCollectionListResponse.
        :rtype: UtilDbCID
        """
        return self._cid

    @cid.setter
    def cid(self, cid: UtilDbCID):
        """Sets the cid of this CollectionsCollectionListResponse.


        :param cid: The cid of this CollectionsCollectionListResponse.
        :type cid: UtilDbCID
        """

        self._cid = cid

    @property
    def coluuid(self) -> str:
        """Gets the coluuid of this CollectionsCollectionListResponse.


        :return: The coluuid of this CollectionsCollectionListResponse.
        :rtype: str
        """
        return self._coluuid

    @coluuid.setter
    def coluuid(self, coluuid: str):
        """Sets the coluuid of this CollectionsCollectionListResponse.


        :param coluuid: The coluuid of this CollectionsCollectionListResponse.
        :type coluuid: str
        """

        self._coluuid = coluuid

    @property
    def cont_id(self) -> int:
        """Gets the cont_id of this CollectionsCollectionListResponse.


        :return: The cont_id of this CollectionsCollectionListResponse.
        :rtype: int
        """
        return self._cont_id

    @cont_id.setter
    def cont_id(self, cont_id: int):
        """Sets the cont_id of this CollectionsCollectionListResponse.


        :param cont_id: The cont_id of this CollectionsCollectionListResponse.
        :type cont_id: int
        """

        self._cont_id = cont_id

    @property
    def dir(self) -> str:
        """Gets the dir of this CollectionsCollectionListResponse.


        :return: The dir of this CollectionsCollectionListResponse.
        :rtype: str
        """
        return self._dir

    @dir.setter
    def dir(self, dir: str):
        """Sets the dir of this CollectionsCollectionListResponse.


        :param dir: The dir of this CollectionsCollectionListResponse.
        :type dir: str
        """

        self._dir = dir

    @property
    def name(self) -> str:
        """Gets the name of this CollectionsCollectionListResponse.


        :return: The name of this CollectionsCollectionListResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this CollectionsCollectionListResponse.


        :param name: The name of this CollectionsCollectionListResponse.
        :type name: str
        """

        self._name = name

    @property
    def size(self) -> int:
        """Gets the size of this CollectionsCollectionListResponse.


        :return: The size of this CollectionsCollectionListResponse.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size: int):
        """Sets the size of this CollectionsCollectionListResponse.


        :param size: The size of this CollectionsCollectionListResponse.
        :type size: int
        """

        self._size = size

    @property
    def type(self) -> CollectionsCidType:
        """Gets the type of this CollectionsCollectionListResponse.


        :return: The type of this CollectionsCollectionListResponse.
        :rtype: CollectionsCidType
        """
        return self._type

    @type.setter
    def type(self, type: CollectionsCidType):
        """Sets the type of this CollectionsCollectionListResponse.


        :param type: The type of this CollectionsCollectionListResponse.
        :type type: CollectionsCidType
        """

        self._type = type

    @property
    def updated_at(self) -> str:
        """Gets the updated_at of this CollectionsCollectionListResponse.


        :return: The updated_at of this CollectionsCollectionListResponse.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: str):
        """Sets the updated_at of this CollectionsCollectionListResponse.


        :param updated_at: The updated_at of this CollectionsCollectionListResponse.
        :type updated_at: str
        """

        self._updated_at = updated_at
