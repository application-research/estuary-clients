# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from estuary-client.models.base_model_ import Model
from estuary-client import util


class AutoretrieveInitBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, addresses: str=None, pub_key: str=None):  # noqa: E501
        """AutoretrieveInitBody - a model defined in Swagger

        :param addresses: The addresses of this AutoretrieveInitBody.  # noqa: E501
        :type addresses: str
        :param pub_key: The pub_key of this AutoretrieveInitBody.  # noqa: E501
        :type pub_key: str
        """
        self.swagger_types = {
            'addresses': str,
            'pub_key': str
        }

        self.attribute_map = {
            'addresses': 'addresses',
            'pub_key': 'pubKey'
        }
        self._addresses = addresses
        self._pub_key = pub_key

    @classmethod
    def from_dict(cls, dikt) -> 'AutoretrieveInitBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The autoretrieve_init_body of this AutoretrieveInitBody.  # noqa: E501
        :rtype: AutoretrieveInitBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addresses(self) -> str:
        """Gets the addresses of this AutoretrieveInitBody.

        Autoretrieve's comma-separated list of addresses  # noqa: E501

        :return: The addresses of this AutoretrieveInitBody.
        :rtype: str
        """
        return self._addresses

    @addresses.setter
    def addresses(self, addresses: str):
        """Sets the addresses of this AutoretrieveInitBody.

        Autoretrieve's comma-separated list of addresses  # noqa: E501

        :param addresses: The addresses of this AutoretrieveInitBody.
        :type addresses: str
        """
        if addresses is None:
            raise ValueError("Invalid value for `addresses`, must not be `None`")  # noqa: E501

        self._addresses = addresses

    @property
    def pub_key(self) -> str:
        """Gets the pub_key of this AutoretrieveInitBody.

        Autoretrieve's public key  # noqa: E501

        :return: The pub_key of this AutoretrieveInitBody.
        :rtype: str
        """
        return self._pub_key

    @pub_key.setter
    def pub_key(self, pub_key: str):
        """Sets the pub_key of this AutoretrieveInitBody.

        Autoretrieve's public key  # noqa: E501

        :param pub_key: The pub_key of this AutoretrieveInitBody.
        :type pub_key: str
        """
        if pub_key is None:
            raise ValueError("Invalid value for `pub_key`, must not be `None`")  # noqa: E501

        self._pub_key = pub_key
