# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from estuary-client.models.base_model_ import Model
from estuary-client.models.address_address import AddressAddress  # noqa: F401,E501
from estuary-client import util


class ApiStorageProviderResp(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, addr: AddressAddress=None, name: str=None, suspended: bool=None, suspended_reason: str=None, version: str=None):  # noqa: E501
        """ApiStorageProviderResp - a model defined in Swagger

        :param addr: The addr of this ApiStorageProviderResp.  # noqa: E501
        :type addr: AddressAddress
        :param name: The name of this ApiStorageProviderResp.  # noqa: E501
        :type name: str
        :param suspended: The suspended of this ApiStorageProviderResp.  # noqa: E501
        :type suspended: bool
        :param suspended_reason: The suspended_reason of this ApiStorageProviderResp.  # noqa: E501
        :type suspended_reason: str
        :param version: The version of this ApiStorageProviderResp.  # noqa: E501
        :type version: str
        """
        self.swagger_types = {
            'addr': AddressAddress,
            'name': str,
            'suspended': bool,
            'suspended_reason': str,
            'version': str
        }

        self.attribute_map = {
            'addr': 'addr',
            'name': 'name',
            'suspended': 'suspended',
            'suspended_reason': 'suspendedReason',
            'version': 'version'
        }
        self._addr = addr
        self._name = name
        self._suspended = suspended
        self._suspended_reason = suspended_reason
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'ApiStorageProviderResp':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The api.storageProviderResp of this ApiStorageProviderResp.  # noqa: E501
        :rtype: ApiStorageProviderResp
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addr(self) -> AddressAddress:
        """Gets the addr of this ApiStorageProviderResp.


        :return: The addr of this ApiStorageProviderResp.
        :rtype: AddressAddress
        """
        return self._addr

    @addr.setter
    def addr(self, addr: AddressAddress):
        """Sets the addr of this ApiStorageProviderResp.


        :param addr: The addr of this ApiStorageProviderResp.
        :type addr: AddressAddress
        """

        self._addr = addr

    @property
    def name(self) -> str:
        """Gets the name of this ApiStorageProviderResp.


        :return: The name of this ApiStorageProviderResp.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ApiStorageProviderResp.


        :param name: The name of this ApiStorageProviderResp.
        :type name: str
        """

        self._name = name

    @property
    def suspended(self) -> bool:
        """Gets the suspended of this ApiStorageProviderResp.


        :return: The suspended of this ApiStorageProviderResp.
        :rtype: bool
        """
        return self._suspended

    @suspended.setter
    def suspended(self, suspended: bool):
        """Sets the suspended of this ApiStorageProviderResp.


        :param suspended: The suspended of this ApiStorageProviderResp.
        :type suspended: bool
        """

        self._suspended = suspended

    @property
    def suspended_reason(self) -> str:
        """Gets the suspended_reason of this ApiStorageProviderResp.


        :return: The suspended_reason of this ApiStorageProviderResp.
        :rtype: str
        """
        return self._suspended_reason

    @suspended_reason.setter
    def suspended_reason(self, suspended_reason: str):
        """Sets the suspended_reason of this ApiStorageProviderResp.


        :param suspended_reason: The suspended_reason of this ApiStorageProviderResp.
        :type suspended_reason: str
        """

        self._suspended_reason = suspended_reason

    @property
    def version(self) -> str:
        """Gets the version of this ApiStorageProviderResp.


        :return: The version of this ApiStorageProviderResp.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this ApiStorageProviderResp.


        :param version: The version of this ApiStorageProviderResp.
        :type version: str
        """

        self._version = version
