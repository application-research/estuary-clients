# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from estuary-client.models.base_model_ import Model
from estuary-client.models.pinner_ipfs_pin_status_response import PinnerIpfsPinStatusResponse  # noqa: F401,E501
from estuary-client import util


class PinnerIpfsListPinStatusResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, count: int=None, results: List[PinnerIpfsPinStatusResponse]=None):  # noqa: E501
        """PinnerIpfsListPinStatusResponse - a model defined in Swagger

        :param count: The count of this PinnerIpfsListPinStatusResponse.  # noqa: E501
        :type count: int
        :param results: The results of this PinnerIpfsListPinStatusResponse.  # noqa: E501
        :type results: List[PinnerIpfsPinStatusResponse]
        """
        self.swagger_types = {
            'count': int,
            'results': List[PinnerIpfsPinStatusResponse]
        }

        self.attribute_map = {
            'count': 'count',
            'results': 'results'
        }
        self._count = count
        self._results = results

    @classmethod
    def from_dict(cls, dikt) -> 'PinnerIpfsListPinStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The pinner.IpfsListPinStatusResponse of this PinnerIpfsListPinStatusResponse.  # noqa: E501
        :rtype: PinnerIpfsListPinStatusResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self) -> int:
        """Gets the count of this PinnerIpfsListPinStatusResponse.


        :return: The count of this PinnerIpfsListPinStatusResponse.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count: int):
        """Sets the count of this PinnerIpfsListPinStatusResponse.


        :param count: The count of this PinnerIpfsListPinStatusResponse.
        :type count: int
        """

        self._count = count

    @property
    def results(self) -> List[PinnerIpfsPinStatusResponse]:
        """Gets the results of this PinnerIpfsListPinStatusResponse.


        :return: The results of this PinnerIpfsListPinStatusResponse.
        :rtype: List[PinnerIpfsPinStatusResponse]
        """
        return self._results

    @results.setter
    def results(self, results: List[PinnerIpfsPinStatusResponse]):
        """Sets the results of this PinnerIpfsListPinStatusResponse.


        :param results: The results of this PinnerIpfsListPinStatusResponse.
        :type results: List[PinnerIpfsPinStatusResponse]
        """

        self._results = results
